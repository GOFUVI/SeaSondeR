Start function seasonder_enableLogs
\name{seasonder_enableLogs}
\alias{seasonder_enableLogs}
\title{Enable log recording in SeaSondeR}
\usage{
seasonder_enableLogs()
}
\description{
This function enables log recording in the SeaSondeR package.
Once enabled, various SeaSondeR functions will output logs.
}
\examples{
seasonder_enableLogs()
}
End function seasonder_enableLogs

Start function seasonder_disableLogs
\name{seasonder_disableLogs}
\alias{seasonder_disableLogs}
\title{Disable log recording in SeaSondeR}
\usage{
seasonder_disableLogs()
}
\description{
This function disables log recording in the SeaSondeR package.
Once disabled, various SeaSondeR functions will no longer output logs.
}
\examples{
seasonder_disableLogs()
}
End function seasonder_disableLogs

Start function seasonder_areLogsEnabled
\name{seasonder_areLogsEnabled}
\alias{seasonder_areLogsEnabled}
\title{Check if log recording is enabled in SeaSondeR}
\usage{
seasonder_areLogsEnabled()
}
\value{
Logical indicating whether logs are enabled or disabled.
}
\description{
This function checks whether log recording is currently enabled
in the SeaSondeR package.
}
\examples{
seasonder_areLogsEnabled()
}
End function seasonder_areLogsEnabled

Start function seasonder_getLog
\name{seasonder_getLog}
\alias{seasonder_getLog}
\title{Retrieve the Last Logs}
\usage{
seasonder_getLog(n = 100)
}
\arguments{
\item{n}{An integer specifying the number of recent log entries to retrieve.}
}
\value{
Returns the \code{n} most recent log entries from the global log.
}
\description{
This function fetches the most recent log entries from the global log variable \code{seasonder_the$log}.
}
End function seasonder_getLog

Start function seasonder_log
\name{seasonder_log}
\alias{seasonder_log}
\title{seasonder_log function}
\usage{
seasonder_log(message, level = "info")
}
\arguments{
\item{message}{A character string indicating the message to be logged.}

\item{level}{A character string that defines the level of the log. It can be "info", "error", or "fatal". Default is "info".}
}
\description{
This function creates a logging message and signals a seasonder_log condition.
}
\examples{
seasonder_log("This is an info message")
seasonder_log("This is an error message", "error")
seasonder_log("This is a fatal message", "fatal")
}
End function seasonder_log

Start function seasonder_logArchiver
\name{seasonder_logArchiver}
\alias{seasonder_logArchiver}
\title{Archive Log Entries}
\usage{
seasonder_logArchiver(
  log_path = NULL,
  log_info_path = log_path,
  log_error_path = log_info_path,
  log_fatal_path = log_error_path
)
}
\arguments{
\item{log_path}{Path to the main log file.}

\item{log_info_path}{Path to the INFO level log file.}

\item{log_error_path}{Path to the ERROR level log file.}

\item{log_fatal_path}{Path to the FATAL level log file.}
}
\value{
If temporary files are used, the path to the main temporary log file is returned. Otherwise, NULL.
}
\description{
Archives log entries based on their levels: INFO, ERROR, or FATAL. If paths are not provided,
temporary files will be used.
}
End function seasonder_logArchiver

Start function seasonder_logAndMessage
\name{seasonder_logAndMessage}
\alias{seasonder_logAndMessage}
\title{Log and Inform Message in SeaSondeR}
\usage{
seasonder_logAndMessage(msg, log_level = "info", calling_function = NULL, ...)
}
\arguments{
\item{msg}{A character string indicating the message to be logged and informed.}

\item{log_level}{A character string indicating the level of the log ("info", "error", "fatal"). Default is "info".}

\item{calling_function}{function where the condition happened. If NULL (default), the code tries to determine which one was.}

\item{...}{passed to \code{rlang::inform} (log_level="info") or \code{rlang::warn} (log_level="error").}
}
\value{
An invisible NULL. The function modifies the shared environment \code{seasonder_the} in place if logs are enabled, and informs the message if messages are enabled.
}
\description{
This function logs a message to the SeaSondeR logging system and also informs the message to the console.
It prefixes the message with the name of the calling function.
}
\examples{
\dontrun{
my_function <- function() {
  seasonder_logAndMessage("This is a message", "info")
}
my_function()
}

}
End function seasonder_logAndMessage

Start function seasonder_logAndAbort
\name{seasonder_logAndAbort}
\alias{seasonder_logAndAbort}
\title{Log and Abort Message in SeaSondeR}
\usage{
seasonder_logAndAbort(msg, calling_function = NULL, ...)
}
\arguments{
\item{msg}{A character string indicating the message}

\item{calling_function}{function where the condition happened. If NULL (default), the code tries to determine which one was.}

\item{...}{passed to \code{rlang::abort}}
}
\value{
An invisible NULL. The function modifies the shared environment \code{seasonder_the} in place if logs are enabled.
}
\description{
This function logs a message to the SeaSondeR logging system and also aborts the execution.
It prefixes the abort message with the name of the calling function.
}
\examples{
\dontrun{
my_function <- function() {
  seasonder_logAndAbort("This is a message")
}
my_function()
}

}
End function seasonder_logAndAbort

Start function seasonder_splitLog
\name{seasonder_splitLog}
\alias{seasonder_splitLog}
\title{Split Logs Based on Time Thresholds}
\usage{
seasonder_splitLog(
  threshold = NULL,
  threshold_factor = 4,
  threshold_quantile = 0.9,
  min_threshold_secs = 10
)
}
\arguments{
\item{threshold}{The time difference threshold for splitting the logs. If NULL, it's calculated.}

\item{threshold_factor}{Multiplicative factor applied to the calculated threshold.}

\item{threshold_quantile}{Quantile used for threshold calculation if \code{threshold} is NULL.}

\item{min_threshold_secs}{Minimum threshold in seconds.}
}
\value{
A list of log blocks, each block being a vector of log entries.
}
\description{
The function splits the log entries into blocks based on time gaps between timestamps. The threshold
for splitting can be provided or calculated based on the gaps in the log timestamps.
}
End function seasonder_splitLog

Start function seasonder_lastLog
\name{seasonder_lastLog}
\alias{seasonder_lastLog}
\title{Retrieve the Last Log Entry}
\usage{
seasonder_lastLog(...)
}
\arguments{
\item{...}{Arguments to be passed to \code{seasonder_splitLog}.}
}
\value{
Returns the last log entry after splitting the log.
}
\description{
This function fetches and splits the log entries, then returns the last entry.
}
End function seasonder_lastLog

