Quiero desarrollar una función que lea esto de una conexión


'csgnʼ
Sint32 – Bit array of the sign of the complex spectra values. This size in bytes is 6 times
nDoppler Cells divided by 8 bits. 6 is for 3 complex pairs. The reduced dB values
are all positive while the sign of the source complex values are stored here.
A bit value of one indicates that the corresponding complex value should be
negative.
C13r doppler cell 0 is stored at bit 0 of byte 0
C13r doppler cell 1 is stored at bit 1 of byte 0
C13r doppler cell 8 is stored at bit 0 of byte 1 in this array.
C13r nDopplers – 1 is stored at bit 7 of byte nDopplers/8-1 (given that nDopplers
is a multiple of eight)
C13i doppler cell 0 is stored at bit 0 of byte nDopplers/8
C13i doppler cell 1 is stored at bit 1 of byte nDopplers/8
C23r doppler cell 0 is stored at bit 0 of byte nDopplers/8*2
C23i doppler cell 0 is stored at bit 0 of byte nDopplers/8*3
C12r doppler cell 0 is stored at bit 0 of byte nDopplers/8*4
C12i doppler cell 0 is stored at bit 0 of byte nDopplers/8*5

Tengo implementado esto

            csign <- readBin(connection, "raw", n= key$size)
            out <- list(purrr::map(csign,\(x) as.integer(rawToBits(x)))) %>% magrittr::set_names(key$key)

quiero que el resultado final de la función sea una lista de vectores de ceros y unos, cada vector se corresponde con C13r, C13i, ...


key$key siempre es csign

el número de grupos binarios son los diferentes grupos C13r, C13i, ... que se encuentran en las especificaciones.

Esta es una posible aproximación para mockear la conexión

con <- rawConnection(as.raw(c(0x42, 0x29, 0xa3, 0xd7)))
      on.exit(close(con))
