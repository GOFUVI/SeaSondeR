[{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"importance-of-an-hf-radar-antenna-pattern","dir":"Articles","previous_headings":"Introduction","what":"Importance of an HF-Radar Antenna Pattern","title":"APM","text":"high frequency radar (HF-Radar) systems, antenna pattern crucial component obtaining accurate current measurements reflected radar signal. radiation pattern, theoretically consists two opposite ellipses antenna loop, disturbed obstacles interference (Codar Ocean Sensors 2003) . presence buildings, trees nearby structure can distort antenna pattern, leading incorrect current measurement.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"need-for-antenna-pattern-measurement-apm","dir":"Articles","previous_headings":"Introduction","what":"Need for Antenna Pattern Measurement (APM)","title":"APM","text":"Antenna Pattern Measurement (APM) essential know actual antenna pattern, allowing system adjusted compensate distortions obstacles. vital improve accuracy radar measurements (Lipa et al. 2018).","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"apm-objective","dir":"Articles","previous_headings":"Antenna Pattern Measurement (APM)","what":"APM Objective","title":"APM","text":"main objective APM correct recalibrate actual antenna pattern. , APM contributes significant improvement quality data collected HF-Radar.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"direction-finding-with-music","dir":"Articles","previous_headings":"MUSIC algorithm and APM","what":"Direction Finding with MUSIC","title":"APM","text":"MUSIC (Multiple Signal Classification) (Schmidt 1986) algorithm estimate direction origin (DOA) signals received radar. systems SeaSonde, MUSIC algorithm applied complex voltages measured three antenna elements estimate parameters.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"application-of-the-music-algorithm-to-seasonde","dir":"Articles","previous_headings":"MUSIC algorithm and APM","what":"Application of the MUSIC algorithm to SeaSonde","title":"APM","text":"context HF-Radar systems SeaSonde, antenna pattern conceptualized “transfer vector” incident signals measured voltages antennas, following mathematical model proposed (Stoica Nehorai 1988): \\[ y(t) = (\\theta) x(t) + e(t), \\quad t = 1, 2, \\ldots, N \\]. transfer vector, antenna pattern, crucial MUSIC algorithm directly affects covariance matrix complex voltages. incorporating actual antenna pattern obtained using APM, DOA estimation results MUSIC significantly accurate reliable.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"limitations-and-challenges","dir":"Articles","previous_headings":"","what":"Limitations and Challenges","title":"APM","text":"implementing MUSIC algorithm, several assumptions limitations consider: \\(m > n\\): number antenna elements (\\(m\\)) must strictly greater number incident signals (\\(n\\)). SeaSonde context, limits number incident signals can considered Doppler frequency one two (Lipa et al. 2006). Single antenna responses: two different DOAs, responses three antennas must . Otherwise, one enters type one ambiguity, one discern direction signal arriving (Schmidt 1986). Uncorrelated noise: noise antennas assumed zero mean standard deviation. noises also correlated . fully coherent signals: incident signals completely coherent . reasonable assumption, especially dealing echoes reflected sea surface (Lipa et al. 2006). \\(N > m\\): number measured samples (\\(N\\)) antenna must greater \\(m\\) (Lipa et al. 2006).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"how-apm-is-applied","dir":"Articles","previous_headings":"Limitations and Challenges","what":"How APM is Applied","title":"APM","text":"APM procedure involves several software steps specialized tools: GPS Tracker: Processes GPS track create TRACK file used subsequent steps. SeaSondeAcquisition: Combines data acquired radar GPS TRACK, generating LOOP file. CrossLoopPatterner: Processes LOOP file generate antenna pattern. Installation new antenna pattern system. crucial use version Radial Suite APM data TimeSeries files ensure consistency processed data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"introduction-to-the-seasonderapm-class","dir":"Articles","previous_headings":"","what":"Introduction to the SeaSondeRAPM Class","title":"APM","text":"SeaSondeRAPM class SeaSondeR package designed handle antenna pattern calibration data, primarily SeaSonde radar systems. class aims provide comprehensive standardized framework store, manipulate, validate antenna pattern calibration data associated metadata. class relies several core functions perform various tasks object creation data validation. brief overview functions:","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_createseasonderapm","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class > Core Functions","what":"seasonder_createSeaSondeRAPM","title":"APM","text":"function constructor creating SeaSondeRAPM object. takes complex matrix (calibration_matrix) primary argument, stores calibration data various bearings. function performs validations, initializes additional attributes, returns SeaSondeRAPM object. Usage:","code":"apm <- seasonder_createSeaSondeRAPM(calibration_matrix)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_initializeattributesseasonderapm","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class > Core Functions","what":"seasonder_initializeAttributesSeaSondeRAPM","title":"APM","text":"Called internally seasonder_createSeaSondeRAPM, function initializes various attributes SeaSondeRAPM object. Attributes include metadata properties like quality_matrix, BEAR, Creator, SiteName, etc. returns list initialized attributes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_validatecalibrationmatrixseasonderapm","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class > Core Functions","what":"seasonder_validateCalibrationMatrixSeaSondeRAPM","title":"APM","text":"function ensures given calibration matrix meets required specifications. instance, checks matrix exactly two rows contains complex numbers.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_validateattributesseasonderapm","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class > Core Functions","what":"seasonder_validateAttributesSeaSondeRAPM","title":"APM","text":"function validates various attributes SeaSondeRAPM object. performs rigorous checks make sure attribute meets predefined conditions. ’s called internally validate attributes object creation modification.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"validate_seasonderapm_","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class > Core Functions","what":"validate_SeaSondeRAPM_*","title":"APM","text":"suite functions validate individual attributes SeaSondeRAPM object, like validate_SeaSondeRAPM_quality_matrix, validate_SeaSondeRAPM_BEAR, validate_SeaSondeRAPM_SiteOrigin, etc.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"getters-and-setters","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class","what":"Getters and Setters","title":"APM","text":"SeaSondeRAPM system, attribute accompanied corresponding getter setter function. functions follow specific naming pattern make easy identify attribute manipulate.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"naming-convention","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class > Getters and Setters","what":"Naming Convention","title":"APM","text":"naming convention getter setter functions : seasonder_setSeaSondeRAPM_<AttributeName>(seasonde_apm_obj, new_value): setting value attribute. seasonder_getSeaSondeRAPM_<AttributeName>(seasonde_apm_obj): retrieving value attribute. , <AttributeName> name attribute interested manipulating.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"setting-an-attribute","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class > Getters and Setters > Examples","what":"Setting an Attribute","title":"APM","text":"set value ‘Type’ attribute SeaSondeRAPM object, use: , seasonde_apm_obj SeaSondeRAPM object whose ‘Type’ attribute want set, new_value value want assign .","code":"seasonder_setSeaSondeRAPM_Type(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"getting-an-attribute","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class > Getters and Setters > Examples","what":"Getting an Attribute","title":"APM","text":"get value ‘Type’ attribute SeaSondeRAPM object, use: , seasonde_apm_obj SeaSondeRAPM object whose ‘Type’ attribute want retrieve. following naming conventions examples, can easily set get attribute SeaSondeRAPM object.","code":"value = seasonder_getSeaSondeRAPM_Type(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_readseasonderapmfile","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class > Getters and Setters","what":"seasonder_readSeaSondeRAPMFile","title":"APM","text":"function allows users read SeaSonde APM file given path parse SeaSondeRAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"example-use-cases","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class","what":"Example Use Cases","title":"APM","text":"","code":"# Create a SeaSondeRAPM object cal_matrix <- matrix(complex(real = c(1, 2), imaginary = c(3, 4)), nrow = 2) apm <- seasonder_createSeaSondeRAPM(cal_matrix)  # Read from an APM file apm_from_file <- seasonder_readSeaSondeRAPMFile(\"path/to/file.apm\")"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"key-features","dir":"Articles","previous_headings":"Introduction to the SeaSondeRAPM Class","what":"Key Features","title":"APM","text":"Robust validation mechanisms Customizable attributes metadata Easy integration SeaSonde data pipelines utilizing class associated functions, users can maintain high level integrity standardization managing SeaSonde antenna pattern calibration data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"detailed-attributes-for-seasonderapm-objects","dir":"Articles","previous_headings":"","what":"Detailed Attributes for SeaSondeRAPM Objects","title":"APM","text":"SeaSondeRAPM object various attributes capture specifics Antenna Pattern Measurement (APM) data. attributes can initialized using seasonder_initializeAttributesSeaSondeRAPM() function.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"initialization-function","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeRAPM Objects","what":"Initialization Function","title":"APM","text":"seasonder_initializeAttributesSeaSondeRAPM function initializes various attributes SeaSondeRAPM object, taking calibration matrix mandatory argument number additional named attributes override default settings.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"syntax","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeRAPM Objects > Initialization Function","what":"Syntax","title":"APM","text":"Arguments: calibration_matrix: 2 x b complex matrix, b represents number bearings calibration. ...: Additional named attributes may override default values.","code":"seasonder_initializeAttributesSeaSondeRAPM(calibration_matrix, ...)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"returns","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeRAPM Objects > Initialization Function","what":"Returns","title":"APM","text":"function returns list containing initialized attributes SeaSondeRAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"attributes","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeRAPM Objects","what":"Attributes","title":"APM","text":"quality_matrix: 2 x b complex matrix quality data, b represents number bearings. BEAR: numeric vector bearings (degrees). Type: Character string representing antenna pattern type. FileName: name MeasPattern.txt file APM data read. CreateTimeStamp: creation time APM file. Creator: name entity created SeaSondeRAPM object. Defaults empty character vector. SiteName: name site (different SiteCode). Defaults empty character vector. SiteOrigin: numeric vector representing GPS location station. Defaults c(0,0). ProcessingSteps: character vector keeps track processing steps applied object. Defaults empty character vector. AmplitudeFactors: numeric vector amplitude factors. Defaults c(0,0). AntennaBearing: numeric vector antenna bearing. Defaults empty numeric vector. StationCode: 4-character code station. Defaults empty character vector. BearingResolution: numeric value indicating bearing resolution degrees. Defaults empty numeric vector. Smoothing: numeric vector indicating smoothing applied antenna pattern. Defaults empty numeric vector. CommentLine: Metadata lines data file matching attribute. Defaults empty character vector. FileID: File’s UUID. Defaults empty character vector. PhaseCorrections: numeric vector phase corrections. Defaults c(0,0).","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"initialize-attributes-with-default-settings","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeRAPM Objects > Examples","what":"Initialize Attributes with Default Settings","title":"APM","text":"","code":"# Create a calibration_matrix cal_matrix <- matrix(complex(real = c(1, 2), imaginary = c(3, 4)), nrow = 2, ncol = 2)  # Initialize attributes attr_list <- seasonder_initializeAttributesSeaSondeRAPM(calibration_matrix = cal_matrix) str(attr_list)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"initialize-attributes-with-custom-type","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeRAPM Objects > Examples","what":"Initialize Attributes with Custom ‘Type’","title":"APM","text":"understanding attributes corresponding getter setter methods, can effectively interact SeaSondeRAPM objects.","code":"# Initialize attributes with a custom 'Type' attr_list_custom <- seasonder_initializeAttributesSeaSondeRAPM(calibration_matrix = cal_matrix, Type = \"Custom Pattern\") str(attr_list_custom)"},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Cross-Spectra Files","text":"Cross-spectra (CS) files contain snapshot state ocean cross-spectral format, calculated measurements three antennas. data represent reflected energy (self spectrum) detectable distance Doppler velocity also cross product spectra (cross spectra) antennas relative . files used calculate radial velocity vectors ocean state. following information CS files extract Codar Ocean Sensors (2016), please see document details reading types files. files format raw cross spectra (CSQ) short time cross spectra (CSS). SeaSondeAcquisition creates CSQs Spectra Series folder. SpectraAverager reads CSQs produces CSS/CSAs SpectraToProcess folder. standard SeaSonde CSS covers 15 minutes, file every 10 minutes. CSA files files produced SpectraSlider app average corresponding CSS. CSAs used process second-order energy obtaining wave height estimates. CSS CSA passed AnalyzeSpectra app obtain radials swell respectively. binary files data Big-Endian (Significant Byte first) implies Intel invert order bytes read data. IEEE decimal values used single (4 bytes) double (8 bytes) precision. Integer values two’s complement. file structure : Header section variable size, increasing version. Data section, can two types contents Depending version file, contains following. higher version includes info previous ones.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"version-1","dir":"Articles","previous_headings":"Introduction","what":"Version 1","title":"Cross-Spectra Files","text":"TimeStamp: seconds since January 1, 1904 local time station computer. CSQs start data acquisition. CSS time center averaged data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"version-2","dir":"Articles","previous_headings":"Introduction","what":"Version 2","title":"Cross-Spectra Files","text":"Data type: CSQ CSS/CSA","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"version-3","dir":"Articles","previous_headings":"Introduction","what":"Version 3","title":"Cross-Spectra Files","text":"Site name","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"version-4","dir":"Articles","previous_headings":"Introduction","what":"Version 4","title":"Cross-Spectra Files","text":"Coverage minutes data. CSQ usually 5 minutes, CSS averages 15 minutes, CSA averages 60 minutes. Information initial frequency scan, Sweep rate, Sweep bandwidth, Sweep Freq direction. Number Dopple cells (usually 512). Number range cells (nominally 32 CSQ 31 CSS/CSA). Index first range cell. Nominally 0 CSQ, CSS usually uses 1 SpectraAverager cuts first range cell useless. May take values spectrum reduced certain range interest. Cell distance kilometers. distance cell index cell -1 + index first cell * distance cells.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"version-5","dir":"Articles","previous_headings":"Introduction","what":"Version 5","title":"Cross-Spectra Files","text":"Output interval minutes. Number active antennas. Number antennas used spectra. Indicator antennas use.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"version-6-this-section-is-variable-in-size-and-contains-optional-metadata-","dir":"Articles","previous_headings":"Introduction","what":"Version 6 (this section is variable in size and contains optional metadata).","title":"Cross-Spectra Files","text":"TIME timestamp higher resolution. ZONE time use TOOL Name version application(s) processed data file. ANTG Receive Antenna Gain corrections. indicator power balance receiving antennas, used SpectraPlotterMap display spectra. applying antenna pattern amplitude corrections use already take account kind difference antennas. FOLS Radial/Elliptical First Order Lines delineate first order region. WOLS Wave Processing First Order Lones delineate first order region. RCVI description receiver, including, among others, receiver gain dB. conversion autospectrum dBm done 10*lob10(abs(autospectrum)) + receiver gain (RCVI block, otherwise use -34.2 dB).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"data-section","dir":"Articles","previous_headings":"","what":"Data section","title":"Cross-Spectra Files","text":"multidimensional array auto-spectrum cross-spectrum data. CSS CSA, also includes information data quality.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"description","dir":"Articles","previous_headings":"SeaSondeRCS Class","what":"Description","title":"Cross-Spectra Files","text":"SeaSondeRCS class R representation SeaSonde CS (Cross-spectra) files. class facilitates reading, manipulation analysis data contained files, providing consistent easy--use structure users working SeaSonde data R.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"purpose","dir":"Articles","previous_headings":"SeaSondeRCS Class","what":"Purpose","title":"Cross-Spectra Files","text":"main purpose SeaSondeRCS class provide unified interface working CS files R. includes ability read CS files, access metadata data, perform specific analyses related SeaSonde data. encapsulating data specific class, process working files simplified greater consistency reliability analysis ensured.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"example-of-creation","dir":"Articles","previous_headings":"SeaSondeRCS Class","what":"Example of creation","title":"Cross-Spectra Files","text":"create instance SeaSondeRCS class, can use following code R: example SeaSondeRCS object created CS file path.","code":"library(SeaSondeR) # Create a SeaSondeRCS object form a CS file CS_file <- \"path/to/CSQ_o_CSS_o_CSA/file\"  SeaSondeRCS_object <- seasonder_createSeaSondeRCS(x = CS_file)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"error-management-in-seasondercs-class","dir":"Articles","previous_headings":"SeaSondeRCS Class","what":"Error Management in SeaSondeRCS Class","title":"Cross-Spectra Files","text":"SeaSondeRCS class incorporates error handling using rlang package. ensures errors structured, informative, manageable. organized overview condition classes, associated cases, functions generate .","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"condition-classes","dir":"Articles","previous_headings":"SeaSondeRCS Class > Error Management in SeaSondeRCS Class","what":"Condition Classes","title":"Cross-Spectra Files","text":"list specific condition classes along functions invoke errors:","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"file-handling-errors","dir":"Articles","previous_headings":"SeaSondeRCS Class > Error Management in SeaSondeRCS Class > Condition Classes","what":"File Handling Errors","title":"Cross-Spectra Files","text":"seasonder_CS_file_not_found_error: Generated seasonder_createSeaSondeRCS file path nonexistent. seasonder_read_cs_file_error: Generated seasonder_readSeaSondeCSFile general file reading issues. seasonder_cs_file_skipped: Generated seasonder_readSeaSondeCSFile file skipped due errors. seasonder_validate_cs_file_error: Generated seasonder_validateCSFileData upon CS file validation failure. seasonder_cs_missing_header_info_error: Generated seasonder_readSeaSondeCSFileData header info missing. seasonder_SeaSonderCS_field_not_found_in_header: Generated seasonder_getCSHeaderByPath CS field absent header.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"data-structure-errors","dir":"Articles","previous_headings":"SeaSondeRCS Class > Error Management in SeaSondeRCS Class > Condition Classes","what":"Data Structure Errors","title":"Cross-Spectra Files","text":"seasonder_CS_missing_nRange_nDoppler_error: Generated seasonder_validateCSHeaderStructure nRangeCells nDopplerCells missing. seasonder_CS_header_is_not_a_list: Generated seasonder_validateCSHeaderStructure header list. seasonder_CS_data_structure_validation_error: Generated seasonder_validateCSDataStructure data structure issues. seasonder_cs_data_reading_error: Generated seasonder_readSeaSondeCSFileData problems data reading.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"field-specific-errors","dir":"Articles","previous_headings":"SeaSondeRCS Class > Error Management in SeaSondeRCS Class > Condition Classes","what":"Field-Specific Errors","title":"Cross-Spectra Files","text":"seasonder_cs_field_skipped: Generated seasonder_readCSField CSField read skipped. seasonder_cs_field_qc_fun_rerun: Generated read_and_qc_field QC function rerun trigger. seasonder_cs_field_qc_fun_not_defined_error: Generated QC function missing seasonder_the environment. seasonder_cs_field_qc_fun_error: Generated read_and_qc_field due issues QC function application. seasonder_cs_field_reading_error: Generated seasonder_readCSField reading issues CSField.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"version-specific-errors","dir":"Articles","previous_headings":"SeaSondeRCS Class > Error Management in SeaSondeRCS Class > Condition Classes","what":"Version-Specific Errors","title":"Cross-Spectra Files","text":"seasonder_v6_block_transformacion_skipped: Generated seasonder_readSeaSondeCSFileHeaderV6 v6 block transformation skipped. seasonder_v6_transform_function_error: Generated seasonder_readSeaSondeCSFileHeaderV6 due v6 function issues. seasonder_v6_skip_block_error: Generated seasonder_readSeaSondeCSFileHeaderV6 skipping v6 block.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"specification-errors","dir":"Articles","previous_headings":"SeaSondeRCS Class > Error Management in SeaSondeRCS Class > Condition Classes","what":"Specification Errors","title":"Cross-Spectra Files","text":"spsr_field_specification_missing_error: Generated seasonder_check_specs field specifications absent.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"condition-cases","dir":"Articles","previous_headings":"SeaSondeRCS Class > Error Management in SeaSondeRCS Class","what":"Condition Cases","title":"Cross-Spectra Files","text":"common scenarios trigger errors managed SeaSondeRCS class: File exist. Missing nRangeCells nDopplerCells header. Issues validating data structure integrity. Failure opening file connection. Encountering unsupported version specifications. Dependency function errors data reading processing. Missing fields within data. Incorrect data dimensions types. Skipped CSFields data acquisition. Reruns alternative QC functions. Missing incorrect QC functions. Errors applying QC functions. Reading issues due corrupted data unsupported formats. Skipped v6 block transformations. Problems arising v6 transformation functions. Skipped v6 blocks due various errors. Incomplete data processing missing header fields.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"restarts","dir":"Articles","previous_headings":"SeaSondeRCS Class > Error Management in SeaSondeRCS Class","what":"Restarts","title":"Cross-Spectra Files","text":"SeaSondeR package, restarts play crucial role error handling, particularly working SeaSondeRCS class. Restarts provide mechanism recover errors without exiting function need complex error trapping logic. allow graceful handling exceptions may occur execution functions. detailed overview restarts available functions related SeaSondeRCS class, including descriptions, types errors manage, examples usage withCallingHandlers.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeCS.html","id":"restarts-overview","dir":"Articles","previous_headings":"SeaSondeRCS Class > Error Management in SeaSondeRCS Class","what":"Restarts Overview","title":"Cross-Spectra Files","text":"Description: restart allows user skip reading CS file error occurs, preventing entire process halting. Error Managed: used error reading CS file, file corruption inaccessibility. Example: Description: restart enables skipping problematic field within CS file, allowing rest file processed. Error Managed: handles errors occur reading specific field CS file. Example: Description: Offers way rerun quality control (QC) function alternative function initial QC check fails. Error Managed: restart invoked QC function encounters error, allowing immediate retry different approach. Example: Description: restart used skip transformation step V6 data error detected process. Error Managed: specifically designed manage errors transformation function V6 data blocks. Example: restarts associated helper function carries name, please see help information. Restarts SeaSondeR package designed intuitive provide seamless error recovery process, ensuring data analysis unduly interrupted recoverable errors. use withCallingHandlers examples demonstrates implement restarts practice, providing template handling common error scenarios encountered working SeaSondeRCS class functions.","code":"withCallingHandlers(   seasonder_cs_file_reading_error = function(cond) seasonder_skip_cs_file(cond),   seasonder_readCSFile(con) ) withCallingHandlers(   seasonder_cs_field_reading_error = function(cond) seasonder_skip_cs_field(cond, NA),   seasonder_readCSField(con, \"UInt8\") ) withCallingHandlers(   seasonder_cs_field_qc_fun_error = function(cond) seasonder_rerun_qc_with_fun(cond, alternate_qc),   read_and_qc_field(field_spec, connection = con) ) withCallingHandlers(   seasonder_v6_transform_function_error = function(cond) {     val <- cond$seasonder_block_data     seasonder_v6_skip_transformation(cond, list(other_var = \"alternative value\"))   },   seasonder_transformV6DataBlock(spec, connection = con) )"},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"instrument-introduction-seasonde","dir":"Articles","previous_headings":"","what":"Instrument Introduction: SeaSonde","title":"SeaSondeR","text":"SeaSonde compact, simplified radar system developed California’s Silicon Valley measure near-surface ocean currents , certain cases, ocean waves. operates low frequencies ranging 4 50 megahertz, uses small bandwidth. SeaSonde system consists two radial sites contribute combined site produce current maps. radial site can imagined hub wheel, “radials” acting spokes pointing toward away site. radials represent component velocities ocean current specific directions. Radial sites typically several kilometers apart fully automated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"common-data-processing-tasks-","dir":"Articles","previous_headings":"","what":"Common Data Processing Tasks.","title":"SeaSondeR","text":"Radial Map Generation: Creation maps showing direction velocity currents relative radial site. Vector Map Creation: Combining radial maps multiple sites create complete ocean current map. Antenna Pattern Measurement (APM): Antenna pattern calibration improve data accuracy. Outliers Removal Noise Filtering: Preprocessing improve data quality. Antenna Gain Calculation: Adjustment measurements obtain accurate data.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"radial-suite","dir":"Articles","previous_headings":"Existing SeaSonde Data Processing Software","what":"Radial Suite","title":"SeaSondeR","text":"proprietary software specifically SeaSonde provides tools data processing. Advantages: - Designed specifically SeaSonde. - Integrated comprehensive. Disadvantages: - Closed software. - Costly limited licenses.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"radiowave-operators-working-group-repositories","dir":"Articles","previous_headings":"Existing SeaSonde Data Processing Software","what":"Radiowave Operators Working Group Repositories","title":"SeaSondeR","text":"Includes spectra_tools repository, Python scripts reading preprocessing data. Advantages: - Open source. - Good data quality control. Disadvantages: - Limited tasks.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"hfr_cs_processing-by-bryan-emery","dir":"Articles","previous_headings":"Existing SeaSonde Data Processing Software","what":"hfr_cs_processing by Bryan Emery","title":"SeaSondeR","text":"Provides wide range functionality data processing MATLAB. Advantages: - Complete task coverage. - Good research. Disadvantages: - Requires MATLAB license. - Limited author’s research.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"tasks-that-can-be-performed-with-this-r-package","dir":"Articles","previous_headings":"","what":"Tasks that Can be Performed with This R Package","title":"SeaSondeR","text":"R package, called SeaSondeR, aims provide complete, open source solution SeaSonde data processing. Capabilities include: Data Reading: Read APM .cs files. Map Generation: Create radial vector maps. APM: Antenna pattern calibration. Data Preprocessing: Noise filtering, outliers elimination gain calculation. Interoperability: Can interface packages repositories deeper analysis. Diagnostics Maintenance: Tools radio site problem diagnosis resolution. using SeaSondeR, users can take advantage power flexibility R language data analysis, maintaining high accuracy reliability interpretation SeaSonde data.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Juan Luis Herrera Cortijo. Author, maintainer.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herrera Cortijo J (2024). SeaSondeR: Tools Processing SeaSonde HF-Radar Data. R package version 0.2.2, https://gofuvi.github.io/SeaSondeR/, https://github.com/GOFUVI/SeaSondeR.","code":"@Manual{,   title = {SeaSondeR: Tools for Processing SeaSonde HF-Radar Data},   author = {Juan Luis {Herrera Cortijo}},   year = {2024},   note = {R package version 0.2.2, https://gofuvi.github.io/SeaSondeR/},   url = {https://github.com/GOFUVI/SeaSondeR}, }"},{"path":"https://gofuvi.github.io/SeaSondeR/index.html","id":"seasonder","dir":"","previous_headings":"","what":"Tools for Processing SeaSonde HF-Radar Data","title":"Tools for Processing SeaSonde HF-Radar Data","text":"goal SeaSondeR provide comprehensive set tools processing analyzing data SeaSonde High-Frequency Radar (HF-Radar) instrument. package intended facilitate handling raw processed data, including spectral matrices, calibration, metadata management.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Processing SeaSonde HF-Radar Data","text":"can install development version SeaSondeR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"GOFUVI/SeaSondeR\")"},{"path":"https://gofuvi.github.io/SeaSondeR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Processing SeaSonde HF-Radar Data","text":"basic example shows solve common problem:","code":"library(SeaSondeR) ## basic example code"},{"path":"https://gofuvi.github.io/SeaSondeR/index.html","id":"package-pages","dir":"","previous_headings":"","what":"Package pages","title":"Tools for Processing SeaSonde HF-Radar Data","text":"https://gofuvi.github.io/SeaSondeR/","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/SeaSondeRAPM_creation_step_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Creation Step Text — SeaSondeRAPM_creation_step_text","title":"Generate Creation Step Text — SeaSondeRAPM_creation_step_text","text":"function generates text message indicating time APM object created based current system time provided file path.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/SeaSondeRAPM_creation_step_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Creation Step Text — SeaSondeRAPM_creation_step_text","text":"","code":"SeaSondeRAPM_creation_step_text(file_path)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/SeaSondeRAPM_creation_step_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Creation Step Text — SeaSondeRAPM_creation_step_text","text":"file_path character string specifying path file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/SeaSondeRAPM_creation_step_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Creation Step Text — SeaSondeRAPM_creation_step_text","text":"character string formatted message indicating time creation file path.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/SeaSondeRCS_creation_step_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Creation Step Text — SeaSondeRCS_creation_step_text","title":"Generate Creation Step Text — SeaSondeRCS_creation_step_text","text":"function generates text message indicating time CS object created based current system time provided file path.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/SeaSondeRCS_creation_step_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Creation Step Text — SeaSondeRCS_creation_step_text","text":"","code":"SeaSondeRCS_creation_step_text(file_path)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/SeaSondeRCS_creation_step_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Creation Step Text — SeaSondeRCS_creation_step_text","text":"file_path character string specifying path file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/SeaSondeRCS_creation_step_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Creation Step Text — SeaSondeRCS_creation_step_text","text":"character string formatted message indicating time creation file path.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/compound.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigment pipe — %<>%","title":"Assigment pipe — %<>%","text":"See magrittr::%<>% details.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/compound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigment pipe — %<>%","text":"","code":"lhs %<>% rhs"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/compound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigment pipe — %<>%","text":"lhs object serves initial value target. rhs function call using magrittr semantics.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/compound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assigment pipe — %<>%","text":"result calling rhs(lhs).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/new_SeaSondeRCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a New SeaSondeRCS Object — new_SeaSondeRCS","title":"Create a New SeaSondeRCS Object — new_SeaSondeRCS","text":"function constructs new SeaSondeRCS object provided header, data, version information.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/new_SeaSondeRCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a New SeaSondeRCS Object — new_SeaSondeRCS","text":"","code":"new_SeaSondeRCS(header, data, seasonder_apm_object = NULL)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/new_SeaSondeRCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a New SeaSondeRCS Object — new_SeaSondeRCS","text":"header list containing header information SeaSondeRCS object. data list containing data fields SeaSondeRCS object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/new_SeaSondeRCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a New SeaSondeRCS Object — new_SeaSondeRCS","text":"SeaSondeRCS object specified header, data, version.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/parse_metadata_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","title":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","text":"function takes single line SeaSonde APM file parses named attribute corresponding value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/parse_metadata_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","text":"","code":"parse_metadata_line(line)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/parse_metadata_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","text":"line line text parse.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/parse_metadata_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","text":"Returns list containing attribute name value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/process_version_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Process a Specific Version of the SeaSonde File Header — process_version_header","title":"Process a Specific Version of the SeaSonde File Header — process_version_header","text":"function processes specified version SeaSonde file header. identifies appropriate header function given version, processes header, updates accumulating pool header data. Specifically:","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/process_version_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process a Specific Version of the SeaSonde File Header — process_version_header","text":"","code":"process_version_header(   pool,   version,   specs,   connection,   endian = \"big\",   prev_data = NULL )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/process_version_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process a Specific Version of the SeaSonde File Header — process_version_header","text":"pool List. accumulating list processed headers prior versions. version Integer. specific version header processed. E.g., version 3, function seasonder_readSeaSondeCSFileHeaderV3 present. specs List. Header specifications version. entry correspond version number contain required information process version's header. connection Connection object. file connection pointing SeaSonde file. endian Character string. Specifies byte order reading data. Can \"big\" (default) prev_data previous header data \"little\". Use appropriate value depending system architecture file's source.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/process_version_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process a Specific Version of the SeaSonde File Header — process_version_header","text":"List. combination initial pool processed header given version. Fields current header overwrite append pool described .","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/process_version_header.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process a Specific Version of the SeaSonde File Header — process_version_header","text":"fields current header overlap accumulated pool, current header's values overwrite pool. Fields unique current header appended pool.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/process_version_header.html","id":"assumptions","dir":"Reference","previous_headings":"","what":"Assumptions","title":"Process a Specific Version of the SeaSonde File Header — process_version_header","text":"function assumes desired version-specific seasonder_readSeaSondeCSFileHeaderV* functions available global environment.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality Control - Check Range and Type — qc_check_range","title":"Quality Control - Check Range and Type — qc_check_range","text":"function verifies given value lies within specified range matches expected type, provided.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality Control - Check Range and Type — qc_check_range","text":"","code":"qc_check_range(field_value, min, max, expected_type = NULL)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality Control - Check Range and Type — qc_check_range","text":"field_value value checked. min Minimum allowable value field_value. max Maximum allowable value field_value. expected_type (optional) expected type field_value. Default NULL.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality Control - Check Range and Type — qc_check_range","text":"original field_value within range matches expected_type; otherwise, error raised.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality Control - Check Type — qc_check_type","title":"Quality Control - Check Type — qc_check_type","text":"function verifies given value expected type.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality Control - Check Type — qc_check_type","text":"","code":"qc_check_type(field_value, expected_type)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality Control - Check Type — qc_check_type","text":"field_value value whose type needs checked. expected_type expected type field_value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality Control - Check Type — qc_check_type","text":"original field_value matches expected_type; otherwise, error raised.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_unsigned.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality Control Check for Unsigned Values — qc_check_unsigned","title":"Quality Control Check for Unsigned Values — qc_check_unsigned","text":"function performs quality control check ensure given field value unsigned number (.e., non-negative number). Optionally, can also check field value matches specified data type performing unsigned check.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_unsigned.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality Control Check for Unsigned Values — qc_check_unsigned","text":"","code":"qc_check_unsigned(field_value, expected_type = NULL)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_unsigned.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality Control Check for Unsigned Values — qc_check_unsigned","text":"field_value value checked. function verifies value non-negative. can type typically expected numeric value. expected_type optional parameter specifying expected data type field_value. provided, function first checks field_value matches expected type verifying unsigned. Default NULL, means type check performed.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/qc_check_unsigned.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality Control Check for Unsigned Values — qc_check_unsigned","text":"Returns field_value passes checks: expected type (expected_type NULL) non-negative. checks fail, function logs error message aborts execution.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/readV6BlockData.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Version 6 Block Data — readV6BlockData","title":"Read Version 6 Block Data — readV6BlockData","text":"function reads processes regular repeated blocks data based provided specifications. Regular blocks read directly, repeated blocks processed recursively based set loops provided specifications.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/readV6BlockData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Version 6 Block Data — readV6BlockData","text":"","code":"readV6BlockData(   specs,   connection,   endian = \"big\",   prev_data = NULL,   remaining_loops = NULL )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/readV6BlockData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Version 6 Block Data — readV6BlockData","text":"specs list. Specifications detailing structure content data blocks. Contains variable names, types, quality check functions, related attributes. repeated blocks, 'repeat' key added details loop structure nested specifications. connection connection object. Represents connection data source. passed lower-level reading function. endian character string. Specifies byte order used. Default \"big\". Passed lower-level reading function. prev_data list. Previous data metadata might required inform reading process, loop lengths repeated blocks. Default NULL. remaining_loops character vector. Details remaining loops processed repeated blocks. Internally used recursive processing. Default NULL. provided, always sync repeat specifications.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/readV6BlockData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Version 6 Block Data — readV6BlockData","text":"list. Contains read processed data based provided specifications. Regular variables returned top level. Repeated blocks nested lists 'loop' 'data' keys detailing loop variable corresponding data.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_and_qc_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Quality Control a Single Field — read_and_qc_field","title":"Read and Quality Control a Single Field — read_and_qc_field","text":"auxiliary function reads field binary file using provided specification applies quality control function retrieved data. expectations functioning quality control functions described detail documentation seasonder_readSeaSondeCSFileBlock.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_and_qc_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Quality Control a Single Field — read_and_qc_field","text":"","code":"read_and_qc_field(field_spec, connection, endian = \"big\")"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_and_qc_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Quality Control a Single Field — read_and_qc_field","text":"field_spec list containing specifications field read. contain: type: type data read, passed seasonder_readCSField. qc_fun: name quality control function. detailed seasonder_readSeaSondeCSFileBlock, function present shared environment seasonder_the must accept field_value first argument, followed arguments specified qc_params. qc_params: list additional parameters pass quality control function. See seasonder_readSeaSondeCSFileBlock detailed expectations QC function behavior. connection connection binary file. endian character string indicating byte order. Options \"big\" \"little\" (default \"big\").","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_and_qc_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Quality Control a Single Field — read_and_qc_field","text":"value field quality control. Can original value, transformed value, NULL value fails quality control. exact behavior quality control function, including handling NULL values, detailed seasonder_readSeaSondeCSFileBlock.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_and_qc_field.html","id":"condition-management","dir":"Reference","previous_headings":"","what":"Condition Management","title":"Read and Quality Control a Single Field — read_and_qc_field","text":"function utilizes rlang package manage conditions provide detailed structured condition messages: Condition Classes: seasonder_cs_field_skipped: Condition indicates CSField skipped reading. seasonder_cs_field_qc_fun_rerun: Condition indicates rerun quality control function triggered. seasonder_cs_field_qc_fun_not_defined_error: Error raised quality control function specified found shared environment seasonder_the. seasonder_cs_field_qc_fun_error: Error raised issue occurs applying quality control function. Condition Cases: CSField skipped reading, condition seasonder_cs_field_skipped used skip QC re-signaled. alternate QC rerun using seasonder_rerun_qc_with_fun restart, condition seasonder_cs_field_qc_fun_rerun signaled. quality control function specified found shared environment seasonder_the, error seasonder_cs_field_qc_fun_not_defined_error raised. issue applying quality control function, error seasonder_cs_field_qc_fun_error raised. Restart Options: function provides structured mechanisms recover errors/conditions execution using withRestarts. following restart options available: seasonder_rerun_qc_with_fun: Allows rerunning QC alternate function. Usage: custom condition handler, can call seasonder_rerun_qc_with_fun(cond, alternateQCfunction) trigger restart run alternate QC using alternateQCfunction. alternateQCfunction used follows alternateQCfunction(x) x value. extra parameters passed. Effect: invoked, function logs info message detailing reason rerun, returns value returned alternateQCfunction.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_matrix_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","title":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","text":"function reads row numbers matrix, represented array text lines. used facilitate reading data SeaSonde APM files.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_matrix_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","text":"","code":"read_matrix_row(lines, start, number_of_lines_to_read)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_matrix_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","text":"lines array lines, representing part row. start start index lines read . number_of_lines_to_read number lines read form row.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_matrix_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","text":"Returns numeric vector containing row values.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICComputeCov.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the MUSIC Covariance Matrix for a Given Cell Range and Doppler Bin — seasonder_MUSICComputeCov","title":"Calculate the MUSIC Covariance Matrix for a Given Cell Range and Doppler Bin — seasonder_MUSICComputeCov","text":"function computes MUltiple SIgnal Classification (MUSIC) covariance matrix specific cell range Doppler bin SeaSonde Cross Spectra (CS) data. MUSIC algorithm used direction finding spectral estimation.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICComputeCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the MUSIC Covariance Matrix for a Given Cell Range and Doppler Bin — seasonder_MUSICComputeCov","text":"","code":"seasonder_MUSICComputeCov(seasonder_cs_object)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICComputeCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the MUSIC Covariance Matrix for a Given Cell Range and Doppler Bin — seasonder_MUSICComputeCov","text":"seasonder_cs_obj SeaSondeRCS object containing cross spectra data. cell_range numeric vector specifying range cells calculate covariance matrix. doppler_bin integer specifying Doppler bin covariance matrix calculated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICComputeCov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the MUSIC Covariance Matrix for a Given Cell Range and Doppler Bin — seasonder_MUSICComputeCov","text":"3x3 complex matrix representing MUSIC covariance matrix specified cell range Doppler bin. element \\(C_{ij}\\) matrix calculated based auto-spectra (diagonal elements) cross-spectra (-diagonal elements) data. diagonal elements \\(= j\\), \\(C_{ii}\\) obtained auto-spectra SSA{}, -diagonal elements \\(\\neq j\\), \\(C_{ij}\\) obtained cross-spectra CSij, j indices matrix.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICComputeCov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the MUSIC Covariance Matrix for a Given Cell Range and Doppler Bin — seasonder_MUSICComputeCov","text":"MUSIC algorithm widely used estimating direction arrival signals requires computation covariance matrix sensor data. context SeaSonde radar data, function utilizes cross spectra (CS) auto-spectra (SSA) data construct covariance matrix necessary MUSIC analysis. function iterates 3x3 matrix fill values based whether indices matrix equal (diagonal elements) (-diagonal elements). Diagonal elements derived auto-spectra data SSA{}, corresponds antenna number. -diagonal elements calculated cross-spectra data CSij, representing cross-spectrum antennas j.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICCovDecomposition.html","id":null,"dir":"Reference","previous_headings":"","what":"Eigen Decomposition of the MUSIC Covariance Matrix — seasonder_MUSICCovDecomposition","title":"Eigen Decomposition of the MUSIC Covariance Matrix — seasonder_MUSICCovDecomposition","text":"Performs eigen decomposition MUSIC covariance matrix obtain eigenvalues eigenvectors. decomposition critical step MUSIC algorithm spectral estimation direction finding.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICCovDecomposition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Eigen Decomposition of the MUSIC Covariance Matrix — seasonder_MUSICCovDecomposition","text":"","code":"seasonder_MUSICCovDecomposition(seasonder_cs_object)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICCovDecomposition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Eigen Decomposition of the MUSIC Covariance Matrix — seasonder_MUSICCovDecomposition","text":"C 3x3 complex covariance matrix obtained seasonder_MUSICComputeCov function.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICCovDecomposition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Eigen Decomposition of the MUSIC Covariance Matrix — seasonder_MUSICCovDecomposition","text":"list containing eigenvalues eigenvectors covariance matrix. eigenvalues sorted descending order facilitate use MUSIC algorithm applications. list following components: values: numeric vector containing sorted eigenvalues. vectors: 3x3 matrix corresponding eigenvectors columns, reordered match sorted eigenvalues.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICCovDecomposition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Eigen Decomposition of the MUSIC Covariance Matrix — seasonder_MUSICCovDecomposition","text":"function uses eigen function perform eigen decomposition covariance matrix. sorts eigenvalues descending order, ordering often required analysis MUSIC algorithm applications, identifying signal noise subspaces. eigenvectors reordered accordingly maintain correspondence eigenvalues.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICEuclideanDistance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Euclidean Distances for MUSIC Algorithm — seasonder_MUSICEuclideanDistance","title":"Calculate Euclidean Distances for MUSIC Algorithm — seasonder_MUSICEuclideanDistance","text":"Computes Euclidean distances based eigenvalue decomposition MUSIC covariance matrix antenna pattern measurements (APM) single dual solutions.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICEuclideanDistance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Euclidean Distances for MUSIC Algorithm — seasonder_MUSICEuclideanDistance","text":"","code":"seasonder_MUSICEuclideanDistance(seasonder_cs_object)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICEuclideanDistance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Euclidean Distances for MUSIC Algorithm — seasonder_MUSICEuclideanDistance","text":"eigen_analysis list containing results eigenvalue decomposition MUSIC covariance matrix. list must least two elements: $values eigenvalues $vectors eigenvectors. seasonder_apm_obj matrix representing antenna pattern measurements (APM), column corresponds specific bearing contains complex-valued response antenna bearing.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICEuclideanDistance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Euclidean Distances for MUSIC Algorithm — seasonder_MUSICEuclideanDistance","text":"2xN complex matrix, N number bearings. first row (\"single\") contains Euclidean distances single solution scenario, second row (\"dual\") dual solution scenario, based eigenvalue decomposition antenna pattern measurements.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSICEuclideanDistance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Euclidean Distances for MUSIC Algorithm — seasonder_MUSICEuclideanDistance","text":"Euclidean distance context MUSIC algorithm measure used estimate direction arrival (DOA) signals. function computes distances projecting antenna pattern measurements onto subspace orthogonal signal's eigenvectors (eigenvalue decomposition MUSIC covariance matrix). computation single dual solutions involves use eigenvectors corresponding noise subspace (En). bearing, function calculates projected Euclidean distance using formula: $$D_i = ^H (En E_n^H) $$ \\(\\) represents complex-valued response antenna given bearing, \\(En\\) matrix eigenvectors corresponding noise subspace, \\(H\\) denotes conjugate transpose. distances calculated single dual solutions, indicating scenarios different numbers signal sources.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSIC_LonLat.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert MUSIC Algorithm Output to Geolocated Coordinates — seasonder_MUSIC_LonLat","title":"Convert MUSIC Algorithm Output to Geolocated Coordinates — seasonder_MUSIC_LonLat","text":"function takes output MUSIC algorithm, typically used direction finding within SeaSonde remote sensing system, converts directional data (range bearings) geographic coordinates based originating radar site.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSIC_LonLat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert MUSIC Algorithm Output to Geolocated Coordinates — seasonder_MUSIC_LonLat","text":"","code":"seasonder_MUSIC_LonLat(seasonder_cs_object)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSIC_LonLat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert MUSIC Algorithm Output to Geolocated Coordinates — seasonder_MUSIC_LonLat","text":"seasonder_cs_object complex SeaSondeR data object includes MUSIC data Antenna Pattern Matching (APM) data necessary locating source signals.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_MUSIC_LonLat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert MUSIC Algorithm Output to Geolocated Coordinates — seasonder_MUSIC_LonLat","text":"Returns modified seasonder_cs_object MUSIC data updated include longitude latitude coordinates detected signal.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_applyAPMAmplitudeAndPhaseCorrections.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Amplitude and Phase Corrections to a SeaSonde RAPM Object — seasonder_applyAPMAmplitudeAndPhaseCorrections","title":"Apply Amplitude and Phase Corrections to a SeaSonde RAPM Object — seasonder_applyAPMAmplitudeAndPhaseCorrections","text":"function applies amplitude phase corrections antenna channel SeaSonde RAPM object based specified corrections retrieved object. corrections applied raw data matrix within SeaSonde RAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_applyAPMAmplitudeAndPhaseCorrections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Amplitude and Phase Corrections to a SeaSonde RAPM Object — seasonder_applyAPMAmplitudeAndPhaseCorrections","text":"","code":"seasonder_applyAPMAmplitudeAndPhaseCorrections(seasonder_apm_object)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_applyAPMAmplitudeAndPhaseCorrections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Amplitude and Phase Corrections to a SeaSonde RAPM Object — seasonder_applyAPMAmplitudeAndPhaseCorrections","text":"seasonder_apm_object SeaSonde RAPM object containing raw data correction factors.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_applyAPMAmplitudeAndPhaseCorrections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Amplitude and Phase Corrections to a SeaSonde RAPM Object — seasonder_applyAPMAmplitudeAndPhaseCorrections","text":"Returns SeaSonde RAPM object amplitude phase corrections applied data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areLogsEnabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","title":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","text":"function checks whether log recording currently enabled SeaSondeR package.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areLogsEnabled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","text":"","code":"seasonder_areLogsEnabled()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areLogsEnabled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","text":"Logical indicating whether logs enabled disabled.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areLogsEnabled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","text":"","code":"seasonder_areLogsEnabled() #> [1] TRUE"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areMessagesEnabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","title":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","text":"function checks whether message logging currently enabled SeaSondeR package.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areMessagesEnabled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","text":"","code":"seasonder_areMessagesEnabled()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areMessagesEnabled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","text":"Logical indicating whether messages enabled disabled.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areMessagesEnabled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","text":"","code":"seasonder_areMessagesEnabled() #> [1] TRUE"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSData.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSData","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSData","text":"function extracts data seasonder_cs_obj, representing SeaSondeRCS object, converts JSON format. Optionally, can write JSON data specified file path.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSData","text":"","code":"seasonder_asJSONSeaSondeRCSData(seasonder_cs_obj, path = NULL)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSData","text":"seasonder_cs_obj SeaSondeRCS object data extracted. path Optional path file JSON output saved. provided, function write JSON data file. NULL, function return JSON data string without writing file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSData","text":"character string JSON format representing data provided SeaSondeRCS object. path provided, function also writes data specified file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSData.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSData","text":"path provided issue writing file, function logs error message using seasonder_logAndMessage returns JSON data string.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSHeader.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSHeader","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSHeader","text":"function extracts header data seasonder_cs_obj, representing SeaSondeRCS object, converts JSON format. Optionally, can write JSON data specified file path.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSHeader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSHeader","text":"","code":"seasonder_asJSONSeaSondeRCSHeader(seasonder_cs_obj, path = NULL)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSHeader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSHeader","text":"seasonder_cs_obj SeaSondeRCS object header data extracted. path Optional path file JSON output saved. provided, function write JSON data file. NULL, function return JSON data string without writing file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSHeader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSHeader","text":"character string JSON format representing header data provided SeaSondeRCS object. path provided, function also writes data specified file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_asJSONSeaSondeRCSHeader.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert SeaSondeRCS Object to JSON — seasonder_asJSONSeaSondeRCSHeader","text":"path provided issue writing file, function logs error message using seasonder_logAndMessage returns JSON data string.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_check_specs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Field Specifications — seasonder_check_specs","title":"Validate Field Specifications — seasonder_check_specs","text":"function checks provided specifications (specs) contain entries required fields listed fields.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_check_specs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Field Specifications — seasonder_check_specs","text":"","code":"seasonder_check_specs(specs, fields)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_check_specs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Field Specifications — seasonder_check_specs","text":"specs list containing field specifications. fields character vector field names checked specs.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_check_specs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Field Specifications — seasonder_check_specs","text":"function iterates field fields vector checks associated entry specs list. field missing, error thrown using seasonder_logAndAbort indicating missing field specification.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_check_specs.html","id":"condition-management","dir":"Reference","previous_headings":"","what":"Condition Management","title":"Validate Field Specifications — seasonder_check_specs","text":"function utilizes rlang package manage conditions, provide detailed structured condition messages: Condition Classes: spsr_field_specification_missing_error: error thrown required field specification missing specs list. Condition Cases: Required field specification missing.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_check_specs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Field Specifications — seasonder_check_specs","text":"","code":"if (FALSE) { specs <- list(field1 = \"spec1\", field2 = \"spec2\") fields <- c(\"field1\", \"field2\", \"field3\") seasonder_check_specs(specs, fields) # Throws an error since spec for 'field3' is missing }"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeRAPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SeaSondeRAPM Object — seasonder_createSeaSondeRAPM","title":"Create a SeaSondeRAPM Object — seasonder_createSeaSondeRAPM","text":"function creates SeaSondeRAPM object store antenna pattern calibration data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeRAPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SeaSondeRAPM Object — seasonder_createSeaSondeRAPM","text":"","code":"seasonder_createSeaSondeRAPM(   calibration_matrix = matrix(complex(real = NA_real_, imaginary = NA_real_), nrow = 2,     ncol = 0),   ... )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeRAPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SeaSondeRAPM Object — seasonder_createSeaSondeRAPM","text":"calibration_matrix 2 x b complex matrix, b number bearings calibration. ... Additional named attributes passed seasonder_initializeAttributesSeaSondeRAPM.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeRAPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SeaSondeRAPM Object — seasonder_createSeaSondeRAPM","text":"SeaSondeRAPM object containing complex matrix class attribute 'SeaSondeRAPM' additional attributes metadata. Row names set \"A13\" \"A23\" column names set values BEAR.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeRAPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a SeaSondeRAPM Object — seasonder_createSeaSondeRAPM","text":"function performs following operations: Validates calibration_matrix codeseasonder_validateCalibrationMatrixSeaSondeRAPM. Initializes attributes either default user-provided values. Merges initialized attributes calibration_matrix. Sets object's class 'SeaSondeRAPM'. details attributes, see seasonder_initializeAttributesSeaSondeRAPM.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeRCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SeaSondeRCS object — seasonder_createSeaSondeRCS","title":"Create a SeaSondeRCS object — seasonder_createSeaSondeRCS","text":"function creates SeaSondeRCS object either file path directly list containing header data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeRCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SeaSondeRCS object — seasonder_createSeaSondeRCS","text":"","code":"seasonder_createSeaSondeRCS(x, specs_path = NULL, ...)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeRCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SeaSondeRCS object — seasonder_createSeaSondeRCS","text":"x Either character string specifying path SeaSonde CS file list header data. specs_path character string specifying path YAML specifications CS file. used x character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeRCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SeaSondeRCS object — seasonder_createSeaSondeRCS","text":"SeaSondeRCS object.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableLogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Disable log recording in SeaSondeR — seasonder_disableLogs","title":"Disable log recording in SeaSondeR — seasonder_disableLogs","text":"function disables log recording SeaSondeR package. disabled, various SeaSondeR functions longer output logs.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableLogs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disable log recording in SeaSondeR — seasonder_disableLogs","text":"","code":"seasonder_disableLogs()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableLogs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disable log recording in SeaSondeR — seasonder_disableLogs","text":"","code":"seasonder_disableLogs()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableMessages.html","id":null,"dir":"Reference","previous_headings":"","what":"Disable message logging in SeaSondeR — seasonder_disableMessages","title":"Disable message logging in SeaSondeR — seasonder_disableMessages","text":"function disables message logging SeaSondeR package. disabled, various SeaSondeR functions longer output informational messages.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableMessages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disable message logging in SeaSondeR — seasonder_disableMessages","text":"","code":"seasonder_disableMessages()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableMessages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disable message logging in SeaSondeR — seasonder_disableMessages","text":"","code":"seasonder_disableMessages()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableLogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable log recording in SeaSondeR — seasonder_enableLogs","title":"Enable log recording in SeaSondeR — seasonder_enableLogs","text":"function enables log recording SeaSondeR package. enabled, various SeaSondeR functions output logs.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableLogs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable log recording in SeaSondeR — seasonder_enableLogs","text":"","code":"seasonder_enableLogs()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableLogs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enable log recording in SeaSondeR — seasonder_enableLogs","text":"","code":"seasonder_enableLogs()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableMessages.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable message logging in SeaSondeR — seasonder_enableMessages","title":"Enable message logging in SeaSondeR — seasonder_enableMessages","text":"function enables message logging SeaSondeR package. enabled, various SeaSondeR functions output informational messages.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableMessages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable message logging in SeaSondeR — seasonder_enableMessages","text":"","code":"seasonder_enableMessages()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableMessages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enable message logging in SeaSondeR — seasonder_enableMessages","text":"","code":"seasonder_enableMessages()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_exportMUSICTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a MUSIC Table from a SeaSondeRCS Object — seasonder_exportMUSICTable","title":"Export a MUSIC Table from a SeaSondeRCS Object — seasonder_exportMUSICTable","text":"function extracts exports MUSIC (Multiple Signal Classification) table SeaSondeRCS (Compact System) object. MUSIC algorithm used estimate direction arrival (DOA) signals, function processes results produce data frame containing relevant information longitude, latitude, range, doppler frequency, radial velocity, signal power, bearing.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_exportMUSICTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a MUSIC Table from a SeaSondeRCS Object — seasonder_exportMUSICTable","text":"","code":"seasonder_exportMUSICTable(seasonder_cs_object)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_exportMUSICTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a MUSIC Table from a SeaSondeRCS Object — seasonder_exportMUSICTable","text":"seasonder_cs_object SeaSondeRCS object MUSIC table extracted.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_exportMUSICTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a MUSIC Table from a SeaSondeRCS Object — seasonder_exportMUSICTable","text":"data frame containing following columns: longitude - Longitude detected signal. latitude - Latitude detected signal. range_cell - Range cell number. range - Range detected signal. doppler_bin - Doppler cell number. doppler_freq - Doppler frequency detected signal. radial_velocity - Radial velocity detected signal. signal_power - Signal power. bearing - Geographical bearing detected signal.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getBinsRadialVelocity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Radial Velocities for Each Doppler Bin — seasonder_getBinsRadialVelocity","title":"Calculate Radial Velocities for Each Doppler Bin — seasonder_getBinsRadialVelocity","text":"Computes radial velocities Doppler bin interval's high boundary SeaSonde radar cross-section (CS) object, typically visualized SpectraPlotterMap. function utilizes Doppler shift frequency alongside radar's wave number Bragg frequency transform frequency measurements radial velocities. calculation grounded relationship Doppler shift frequency velocity surface currents within radar's field view.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getBinsRadialVelocity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Radial Velocities for Each Doppler Bin — seasonder_getBinsRadialVelocity","text":"","code":"seasonder_getBinsRadialVelocity(seasonder_cs_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getBinsRadialVelocity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Radial Velocities for Each Doppler Bin — seasonder_getBinsRadialVelocity","text":"seasonder_cs_obj SeaSondeRCS object created using seasonder_createSeaSondeRCS. object contains necessary data calculating Doppler bins frequencies , subsequently, radial velocities.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getBinsRadialVelocity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Radial Velocities for Each Doppler Bin — seasonder_getBinsRadialVelocity","text":"numeric vector containing radial velocities (m/s) Doppler bin, calculated high boundary Doppler bin interval. velocities provide insight scatterers' radial movement within radar's observation area.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getBinsRadialVelocity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Radial Velocities for Each Doppler Bin — seasonder_getBinsRadialVelocity","text":"Specifically, radial velocity \\(v\\) Doppler bin calculated using formula: [ v = Freq - BraggFreq2  k_0 ] \\(v\\) radial velocity, \\(Freq\\) Doppler shift frequency bin, \\(BraggFreq\\) Bragg frequency (negative frequencies 0 positive frequencies equal 0), \\(k_0\\) radar wave number divided \\(2\\).","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getCSHeaderByPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a value from the SeaSondeRCS header by a specific path — seasonder_getCSHeaderByPath","title":"Retrieve a value from the SeaSondeRCS header by a specific path — seasonder_getCSHeaderByPath","text":"function retrieves specific value SeaSondeRCS object's header based provided path. path can single field name list nested field names.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getCSHeaderByPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a value from the SeaSondeRCS header by a specific path — seasonder_getCSHeaderByPath","text":"","code":"seasonder_getCSHeaderByPath(seasonder_obj, path)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getCSHeaderByPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a value from the SeaSondeRCS header by a specific path — seasonder_getCSHeaderByPath","text":"seasonder_obj SeaSondeRCS object. path character vector specifying field nested fields retrieve.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getCSHeaderByPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a value from the SeaSondeRCS header by a specific path — seasonder_getCSHeaderByPath","text":"value specified path header. path found, NULL returned warning thrown.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getCSHeaderByPath.html","id":"condition-management","dir":"Reference","previous_headings":"","what":"Condition Management","title":"Retrieve a value from the SeaSondeRCS header by a specific path — seasonder_getCSHeaderByPath","text":"function utilizes rlang package manage errors conditions, provide detailed structured condition messages: Condition Classes: seasonder_SeaSonderCS_field_not_found_in_header: Indicates specified path found header. Condition Cases: Field nested fields specified path found header.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getDopplerBinsFrequency.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Doppler Bins Frequency — seasonder_getDopplerBinsFrequency","title":"Get Doppler Bins Frequency — seasonder_getDopplerBinsFrequency","text":"function calculates frequency limits Doppler bin within SeaSonde Cross Spectrum (CS) object. can return frequencies either original Hz values normalized second Bragg frequency. frequencies calculated high limit Doppler bin interval, similar displayed SpectraPlotterMap.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getDopplerBinsFrequency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Doppler Bins Frequency — seasonder_getDopplerBinsFrequency","text":"","code":"seasonder_getDopplerBinsFrequency(seasonder_cs_obj, normalized = FALSE)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getDopplerBinsFrequency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Doppler Bins Frequency — seasonder_getDopplerBinsFrequency","text":"seasonder_cs_obj SeaSonde Cross Spectrum (CS) object created seasonder_createSeaSondeRCS(). object contains necessary metadata spectral data compute Doppler bin frequencies. normalized logical value indicating returned frequencies normalized second Bragg frequency. TRUE, frequencies divided second Bragg frequency, returning dimensionless values relative . Default FALSE, returning frequencies Hz.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getDopplerBinsFrequency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Doppler Bins Frequency — seasonder_getDopplerBinsFrequency","text":"numeric vector frequencies representing high limit Doppler bin interval. normalized TRUE, frequencies dimensionless values relative second Bragg frequency; otherwise, Hz.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getDopplerBinsFrequency.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Doppler Bins Frequency — seasonder_getDopplerBinsFrequency","text":"function internally utilizes several helper functions seasonder_getCenterDopplerBin(), seasonder_getnDopplerCells(), seasonder_getDopplerSpectrumResolution() calculate Doppler bin frequencies. Furthermore, normalization requested, uses seasonder_getBraggDopplerAngularFrequency() obtain second Bragg frequency normalization purposes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the Last Logs — seasonder_getLog","title":"Retrieve the Last Logs — seasonder_getLog","text":"function fetches recent log entries global log variable seasonder_the$log.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the Last Logs — seasonder_getLog","text":"","code":"seasonder_getLog(n = 100)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the Last Logs — seasonder_getLog","text":"n integer specifying number recent log entries retrieve.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the Last Logs — seasonder_getLog","text":"Returns n recent log entries global log.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getRadialVelocityResolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Radial Velocity Resolution — seasonder_getRadialVelocityResolution","title":"Calculate Radial Velocity Resolution — seasonder_getRadialVelocityResolution","text":"Computes radial velocity resolution SeaSonde radar cross-section (CS) object. measurement indicates smallest change velocity radar can discern different targets scatterers within observation area. calculation based Doppler spectrum resolution radar wave number, providing crucial parameter analyzing radar's capability distinguish velocities.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getRadialVelocityResolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Radial Velocity Resolution — seasonder_getRadialVelocityResolution","text":"","code":"seasonder_getRadialVelocityResolution(seasonder_cs_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getRadialVelocityResolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Radial Velocity Resolution — seasonder_getRadialVelocityResolution","text":"seasonder_cs_obj SeaSondeRCS object created using seasonder_createSeaSondeRCS. object contains necessary data calculate Doppler spectrum resolution , subsequently, radial velocity resolution.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getRadialVelocityResolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Radial Velocity Resolution — seasonder_getRadialVelocityResolution","text":"single numeric value representing radial velocity resolution meters per second (m/s), indicating radar's ability differentiate closely spaced velocities.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getRadialVelocityResolution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Radial Velocity Resolution — seasonder_getRadialVelocityResolution","text":"radial velocity resolution (\\(v_res\\)) determined using formula: [ v_res = SpectraRes2  k_0 ] \\(v_res\\) radial velocity resolution, \\(SpectraRes\\) Doppler spectrum resolution, \\(k_0\\) radar wave number divided \\(2\\). formula reflects relationship frequency resolution radar's Doppler spectrum corresponding velocity resolution, taking account wave number fundamental characteristic radar system.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_AmplitudeFactors.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for AmplitudeFactors — seasonder_getSeaSondeRAPM_AmplitudeFactors","title":"Getter for AmplitudeFactors — seasonder_getSeaSondeRAPM_AmplitudeFactors","text":"Getter AmplitudeFactors","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_AmplitudeFactors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for AmplitudeFactors — seasonder_getSeaSondeRAPM_AmplitudeFactors","text":"","code":"seasonder_getSeaSondeRAPM_AmplitudeFactors(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_AmplitudeFactors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for AmplitudeFactors — seasonder_getSeaSondeRAPM_AmplitudeFactors","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_AntennaBearing.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for AntennaBearing — seasonder_getSeaSondeRAPM_AntennaBearing","title":"Getter for AntennaBearing — seasonder_getSeaSondeRAPM_AntennaBearing","text":"Getter AntennaBearing","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_AntennaBearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for AntennaBearing — seasonder_getSeaSondeRAPM_AntennaBearing","text":"","code":"seasonder_getSeaSondeRAPM_AntennaBearing(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_AntennaBearing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for AntennaBearing — seasonder_getSeaSondeRAPM_AntennaBearing","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_BEAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for BEAR — seasonder_getSeaSondeRAPM_BEAR","title":"Getter for BEAR — seasonder_getSeaSondeRAPM_BEAR","text":"Getter BEAR","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_BEAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for BEAR — seasonder_getSeaSondeRAPM_BEAR","text":"","code":"seasonder_getSeaSondeRAPM_BEAR(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_BEAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for BEAR — seasonder_getSeaSondeRAPM_BEAR","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_BearingResolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for BearingResolution — seasonder_getSeaSondeRAPM_BearingResolution","title":"Getter for BearingResolution — seasonder_getSeaSondeRAPM_BearingResolution","text":"Getter BearingResolution","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_BearingResolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for BearingResolution — seasonder_getSeaSondeRAPM_BearingResolution","text":"","code":"seasonder_getSeaSondeRAPM_BearingResolution(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_BearingResolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for BearingResolution — seasonder_getSeaSondeRAPM_BearingResolution","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_CommentLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for CommentLine — seasonder_getSeaSondeRAPM_CommentLine","title":"Getter for CommentLine — seasonder_getSeaSondeRAPM_CommentLine","text":"Getter CommentLine","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_CommentLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for CommentLine — seasonder_getSeaSondeRAPM_CommentLine","text":"","code":"seasonder_getSeaSondeRAPM_CommentLine(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_CommentLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for CommentLine — seasonder_getSeaSondeRAPM_CommentLine","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_CreateTimeStamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for CreateTimeStamp — seasonder_getSeaSondeRAPM_CreateTimeStamp","title":"Getter for CreateTimeStamp — seasonder_getSeaSondeRAPM_CreateTimeStamp","text":"Getter CreateTimeStamp","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_CreateTimeStamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for CreateTimeStamp — seasonder_getSeaSondeRAPM_CreateTimeStamp","text":"","code":"seasonder_getSeaSondeRAPM_CreateTimeStamp(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_CreateTimeStamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for CreateTimeStamp — seasonder_getSeaSondeRAPM_CreateTimeStamp","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_Creator.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for Creator — seasonder_getSeaSondeRAPM_Creator","title":"Getter for Creator — seasonder_getSeaSondeRAPM_Creator","text":"Getter Creator","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_Creator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for Creator — seasonder_getSeaSondeRAPM_Creator","text":"","code":"seasonder_getSeaSondeRAPM_Creator(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_Creator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for Creator — seasonder_getSeaSondeRAPM_Creator","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_FileID.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for FileID — seasonder_getSeaSondeRAPM_FileID","title":"Getter for FileID — seasonder_getSeaSondeRAPM_FileID","text":"Getter FileID","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_FileID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for FileID — seasonder_getSeaSondeRAPM_FileID","text":"","code":"seasonder_getSeaSondeRAPM_FileID(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_FileID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for FileID — seasonder_getSeaSondeRAPM_FileID","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_FileName.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for FileName — seasonder_getSeaSondeRAPM_FileName","title":"Getter for FileName — seasonder_getSeaSondeRAPM_FileName","text":"Getter FileName","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_FileName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for FileName — seasonder_getSeaSondeRAPM_FileName","text":"","code":"seasonder_getSeaSondeRAPM_FileName(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_FileName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for FileName — seasonder_getSeaSondeRAPM_FileName","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_PhaseCorrections.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for PhaseCorrections — seasonder_getSeaSondeRAPM_PhaseCorrections","title":"Getter for PhaseCorrections — seasonder_getSeaSondeRAPM_PhaseCorrections","text":"Getter PhaseCorrections","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_PhaseCorrections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for PhaseCorrections — seasonder_getSeaSondeRAPM_PhaseCorrections","text":"","code":"seasonder_getSeaSondeRAPM_PhaseCorrections(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_PhaseCorrections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for PhaseCorrections — seasonder_getSeaSondeRAPM_PhaseCorrections","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_ProcessingSteps.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for ProcessingSteps — seasonder_getSeaSondeRAPM_ProcessingSteps","title":"Getter for ProcessingSteps — seasonder_getSeaSondeRAPM_ProcessingSteps","text":"Getter ProcessingSteps","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_ProcessingSteps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for ProcessingSteps — seasonder_getSeaSondeRAPM_ProcessingSteps","text":"","code":"seasonder_getSeaSondeRAPM_ProcessingSteps(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_ProcessingSteps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for ProcessingSteps — seasonder_getSeaSondeRAPM_ProcessingSteps","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_SiteName.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for SiteName — seasonder_getSeaSondeRAPM_SiteName","title":"Getter for SiteName — seasonder_getSeaSondeRAPM_SiteName","text":"Getter SiteName","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_SiteName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for SiteName — seasonder_getSeaSondeRAPM_SiteName","text":"","code":"seasonder_getSeaSondeRAPM_SiteName(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_SiteName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for SiteName — seasonder_getSeaSondeRAPM_SiteName","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_SiteOrigin.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for SiteOrigin — seasonder_getSeaSondeRAPM_SiteOrigin","title":"Getter for SiteOrigin — seasonder_getSeaSondeRAPM_SiteOrigin","text":"Getter SiteOrigin","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_SiteOrigin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for SiteOrigin — seasonder_getSeaSondeRAPM_SiteOrigin","text":"","code":"seasonder_getSeaSondeRAPM_SiteOrigin(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_SiteOrigin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for SiteOrigin — seasonder_getSeaSondeRAPM_SiteOrigin","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_Smoothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for Smoothing — seasonder_getSeaSondeRAPM_Smoothing","title":"Getter for Smoothing — seasonder_getSeaSondeRAPM_Smoothing","text":"Getter Smoothing","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_Smoothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for Smoothing — seasonder_getSeaSondeRAPM_Smoothing","text":"","code":"seasonder_getSeaSondeRAPM_Smoothing(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_Smoothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for Smoothing — seasonder_getSeaSondeRAPM_Smoothing","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_StationCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for StationCode — seasonder_getSeaSondeRAPM_StationCode","title":"Getter for StationCode — seasonder_getSeaSondeRAPM_StationCode","text":"Getter StationCode","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_StationCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for StationCode — seasonder_getSeaSondeRAPM_StationCode","text":"","code":"seasonder_getSeaSondeRAPM_StationCode(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_StationCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for StationCode — seasonder_getSeaSondeRAPM_StationCode","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_Type.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for Type — seasonder_getSeaSondeRAPM_Type","title":"Getter for Type — seasonder_getSeaSondeRAPM_Type","text":"Getter Type","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_Type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for Type — seasonder_getSeaSondeRAPM_Type","text":"","code":"seasonder_getSeaSondeRAPM_Type(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_Type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for Type — seasonder_getSeaSondeRAPM_Type","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_quality_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for quality_matrix — seasonder_getSeaSondeRAPM_quality_matrix","title":"Getter for quality_matrix — seasonder_getSeaSondeRAPM_quality_matrix","text":"Getter quality_matrix","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_quality_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for quality_matrix — seasonder_getSeaSondeRAPM_quality_matrix","text":"","code":"seasonder_getSeaSondeRAPM_quality_matrix(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRAPM_quality_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for quality_matrix — seasonder_getSeaSondeRAPM_quality_matrix","text":"seasonde_apm_obj SeaSonderAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_ProcessingSteps.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for ProcessingSteps — seasonder_getSeaSondeRCS_ProcessingSteps","title":"Getter for ProcessingSteps — seasonder_getSeaSondeRCS_ProcessingSteps","text":"Getter ProcessingSteps","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_ProcessingSteps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for ProcessingSteps — seasonder_getSeaSondeRCS_ProcessingSteps","text":"","code":"seasonder_getSeaSondeRCS_ProcessingSteps(seasonder_cs_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_ProcessingSteps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for ProcessingSteps — seasonder_getSeaSondeRCS_ProcessingSteps","text":"seasonder_cs_obj SeaSonderCS object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_SelfSpectra.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a list of power spectra for each combination of antenna, dist_range and doppler_range — seasonder_getSeaSondeRCS_SelfSpectra","title":"returns a list of power spectra for each combination of antenna, dist_range and doppler_range — seasonder_getSeaSondeRCS_SelfSpectra","text":"returns list power spectra combination antenna, dist_range doppler_range","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_SelfSpectra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a list of power spectra for each combination of antenna, dist_range and doppler_range — seasonder_getSeaSondeRCS_SelfSpectra","text":"","code":"seasonder_getSeaSondeRCS_SelfSpectra(   seasonder_cs_obj,   antennae,   dist_ranges = NULL,   doppler_ranges = NULL,   dist_in_km = FALSE,   collapse = FALSE )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_antenna_SSdata.html","id":null,"dir":"Reference","previous_headings":"","what":"returns the power spectrum of an antenna — seasonder_getSeaSondeRCS_antenna_SSdata","title":"returns the power spectrum of an antenna — seasonder_getSeaSondeRCS_antenna_SSdata","text":"returns power spectrum antenna","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_antenna_SSdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns the power spectrum of an antenna — seasonder_getSeaSondeRCS_antenna_SSdata","text":"","code":"seasonder_getSeaSondeRCS_antenna_SSdata(seasonder_cs_obj, antenna)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for data — seasonder_getSeaSondeRCS_data","title":"Getter for data — seasonder_getSeaSondeRCS_data","text":"Getter data","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for data — seasonder_getSeaSondeRCS_data","text":"","code":"seasonder_getSeaSondeRCS_data(seasonder_cs_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for data — seasonder_getSeaSondeRCS_data","text":"seasonder_cs_obj SeaSondeRCS object","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Getter for header — seasonder_getSeaSondeRCS_header","title":"Getter for header — seasonder_getSeaSondeRCS_header","text":"Getter header","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getter for header — seasonder_getSeaSondeRCS_header","text":"","code":"seasonder_getSeaSondeRCS_header(seasonder_cs_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getSeaSondeRCS_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getter for header — seasonder_getSeaSondeRCS_header","text":"seasonder_cs_obj SeaSondeRCS object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.SeaSondeRAPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Getters y Setters #### Get the version value from a SeaSondeRAPM object — seasonder_getVersion.SeaSondeRAPM","title":"Getters y Setters #### Get the version value from a SeaSondeRAPM object — seasonder_getVersion.SeaSondeRAPM","text":"Getters y Setters #### Get version value SeaSondeRAPM object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.SeaSondeRAPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Getters y Setters #### Get the version value from a SeaSondeRAPM object — seasonder_getVersion.SeaSondeRAPM","text":"","code":"# S3 method for SeaSondeRAPM seasonder_getVersion(seasonder_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.SeaSondeRAPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Getters y Setters #### Get the version value from a SeaSondeRAPM object — seasonder_getVersion.SeaSondeRAPM","text":"seasonder_obj SeaSondeRAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.SeaSondeRAPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Getters y Setters #### Get the version value from a SeaSondeRAPM object — seasonder_getVersion.SeaSondeRAPM","text":"version value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.SeaSondeRCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the version value from a SeaSondeRCS object — seasonder_getVersion.SeaSondeRCS","title":"Get the version value from a SeaSondeRCS object — seasonder_getVersion.SeaSondeRCS","text":"Get version value SeaSondeRCS object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.SeaSondeRCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the version value from a SeaSondeRCS object — seasonder_getVersion.SeaSondeRCS","text":"","code":"# S3 method for SeaSondeRCS seasonder_getVersion(seasonder_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.SeaSondeRCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the version value from a SeaSondeRCS object — seasonder_getVersion.SeaSondeRCS","text":"seasonder_obj SeaSondeRCS object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.SeaSondeRCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the version value from a SeaSondeRCS object — seasonder_getVersion.SeaSondeRCS","text":"version value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the version value from a SeaSondeR object — seasonder_getVersion","title":"Get the version value from a SeaSondeR object — seasonder_getVersion","text":"Get version value SeaSondeR object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the version value from a SeaSondeR object — seasonder_getVersion","text":"","code":"seasonder_getVersion(seasonder_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the version value from a SeaSondeR object — seasonder_getVersion","text":"seasonder_obj SeaSondeR object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getVersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the version value from a SeaSondeR object — seasonder_getVersion","text":"version value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getnDopplerCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the nDopplerCells value from a SeaSondeRCS object — seasonder_getnDopplerCells","title":"Get the nDopplerCells value from a SeaSondeRCS object — seasonder_getnDopplerCells","text":"Get nDopplerCells value SeaSondeRCS object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getnDopplerCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the nDopplerCells value from a SeaSondeRCS object — seasonder_getnDopplerCells","text":"","code":"seasonder_getnDopplerCells(seasonder_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getnDopplerCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the nDopplerCells value from a SeaSondeRCS object — seasonder_getnDopplerCells","text":"seasonder_obj SeaSondeRCS object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getnDopplerCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the nDopplerCells value from a SeaSondeRCS object — seasonder_getnDopplerCells","text":"nDopplerCells value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getnRangeCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the nRangeCells value from a SeaSondeRCS object — seasonder_getnRangeCells","title":"Get the nRangeCells value from a SeaSondeRCS object — seasonder_getnRangeCells","text":"Get nRangeCells value SeaSondeRCS object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getnRangeCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the nRangeCells value from a SeaSondeRCS object — seasonder_getnRangeCells","text":"","code":"seasonder_getnRangeCells(seasonder_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getnRangeCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the nRangeCells value from a SeaSondeRCS object — seasonder_getnRangeCells","text":"seasonder_obj SeaSondeRCS object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_getnRangeCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the nRangeCells value from a SeaSondeRCS object — seasonder_getnRangeCells","text":"nRangeCells value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initCSDataStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Cross-Spectra Data Structure for SeaSondeR — seasonder_initCSDataStructure","title":"Initialize Cross-Spectra Data Structure for SeaSondeR — seasonder_initCSDataStructure","text":"function initializes data structure storing cross-spectra data related SeaSonde radar measurements. creates list matrices, corresponding different components SeaSonde data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initCSDataStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Cross-Spectra Data Structure for SeaSondeR — seasonder_initCSDataStructure","text":"","code":"seasonder_initCSDataStructure(nRanges, nDoppler)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initCSDataStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Cross-Spectra Data Structure for SeaSondeR — seasonder_initCSDataStructure","text":"nRanges Integer, number range cells radar measurement. Specifies number rows matrix. nDoppler Integer, number Doppler bins radar measurement. Specifies number columns matrix.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initCSDataStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Cross-Spectra Data Structure for SeaSondeR — seasonder_initCSDataStructure","text":"list containing matrices different cross-spectra components: SSA1: Matrix SSA1 component, filled NA_real_. SSA2: Matrix SSA2 component, filled NA_real_. SSA3: Matrix SSA3 component, filled NA_real_. CS12: Matrix CS12 component, complex numbers NA_real_ real imaginary parts. CS13: Matrix CS13 component, complex numbers NA_real_ real imaginary parts. CS23: Matrix CS23 component, complex numbers NA_real_ real imaginary parts. QC: Quality control matrix, filled NA_real_.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeRAPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Attributes for a SeaSondeRAPM Object — seasonder_initializeAttributesSeaSondeRAPM","title":"Initialize Attributes for a SeaSondeRAPM Object — seasonder_initializeAttributesSeaSondeRAPM","text":"function initializes attributes SeaSondeRAPM object, including metadata properties.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeRAPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Attributes for a SeaSondeRAPM Object — seasonder_initializeAttributesSeaSondeRAPM","text":"","code":"seasonder_initializeAttributesSeaSondeRAPM(calibration_matrix, ...)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeRAPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Attributes for a SeaSondeRAPM Object — seasonder_initializeAttributesSeaSondeRAPM","text":"calibration_matrix 2 x b complex matrix, b number bearings calibration. ... Additional named attributes may override defaults.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeRAPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Attributes for a SeaSondeRAPM Object — seasonder_initializeAttributesSeaSondeRAPM","text":"list containing initialized attributes SeaSondeRAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeRAPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize Attributes for a SeaSondeRAPM Object — seasonder_initializeAttributesSeaSondeRAPM","text":"function initializes following attributes: quality_matrix: 2 x b complex matrix quality data, b number bearings. BEAR: numeric vector bearings (degrees). Type: Character string antenna pattern type. Creator: Object creator name. Default empty character vector. SiteName: Site name (SiteCode). Default empty character vector. SiteOrigin: Numeric vector two elements representing Station GPS location. Default c(0,0). FileName: Default empty character vector. CreateTimeStamp: APM file creation time. Default current system date time. ProcessingSteps: Processing steps applied object. Default empty character vector. AmplitudeFactors: Numeric vector two elements amplitude factors. Default c(0,0). AntennaBearing: Default empty numeric vector. StationCode: 4-character station code. Default empty character vector. BearingResolution: degrees. Default empty numeric vector. Smoothing: Numeric vector indicating smoothing applied antenna pattern. Default empty numeric vector. CommentLine: Metadata lines data file matching attribute. Default empty character vector. FileID: File's UUID. Default empty character vector. PhaseCorrections: Numeric vector two elements phase corrections. Default c(0,0). attribute corresponding setter getter function, following naming pattern seasonder_set/getSeaSondeRAPM_*, * name attribute. example, set 'Type' attribute, use seasonder_setSeaSondeRAPM_Type(seasonde_apm_obj,new_value). get , use seasonder_getSeaSondeRAPM_Type(seasonde_apm_obj,new_value). Please see seasonder_validateAttributesSeaSondeRAPM details attributes validation.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_int_to_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an integer to raw bytes using a 64-bit representation — seasonder_int_to_raw","title":"Convert an integer to raw bytes using a 64-bit representation — seasonder_int_to_raw","text":"function converts integer raw byte representation using 64-bit (8-byte) format. leverages bit64 package handle 64-bit integer representation conversion.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_int_to_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an integer to raw bytes using a 64-bit representation — seasonder_int_to_raw","text":"","code":"seasonder_int_to_raw(x)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_int_to_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an integer to raw bytes using a 64-bit representation — seasonder_int_to_raw","text":"x integer converted raw bytes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_int_to_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an integer to raw bytes using a 64-bit representation — seasonder_int_to_raw","text":"raw vector representing 64-bit format provided integer.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_int_to_raw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an integer to raw bytes using a 64-bit representation — seasonder_int_to_raw","text":"function follows steps: Convert integer 64-bit format using bit64::.integer64. Convert 64-bit integer bit string. Split bit string individual bits. Reorder bits groups 8, reversing order within group. Convert reordered bits back raw bytes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_int_to_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an integer to raw bytes using a 64-bit representation — seasonder_int_to_raw","text":"","code":"if (FALSE) { int_val <- 1234567890 raw_val <- seasonder_int_to_raw(int_val) cat(rawToChar(raw_val)) }"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_lastLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the Last Log Entry — seasonder_lastLog","title":"Retrieve the Last Log Entry — seasonder_lastLog","text":"function fetches splits log entries, returns last entry.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_lastLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the Last Log Entry — seasonder_lastLog","text":"","code":"seasonder_lastLog(...)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_lastLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the Last Log Entry — seasonder_lastLog","text":"... Arguments passed seasonder_splitLog.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_lastLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the Last Log Entry — seasonder_lastLog","text":"Returns last log entry splitting log.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log.html","id":null,"dir":"Reference","previous_headings":"","what":"seasonder_log function — seasonder_log","title":"seasonder_log function — seasonder_log","text":"function creates logging message signals seasonder_log condition.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"seasonder_log function — seasonder_log","text":"","code":"seasonder_log(message, level = \"info\")"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"seasonder_log function — seasonder_log","text":"message character string indicating message logged. level character string defines level log. can \"info\", \"error\", \"fatal\". Default \"info\".","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"seasonder_log function — seasonder_log","text":"","code":"seasonder_log(\"This is an info message\") seasonder_log(\"This is an error message\", \"error\") seasonder_log(\"This is a fatal message\", \"fatal\")"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndAbort.html","id":null,"dir":"Reference","previous_headings":"","what":"Log and Abort Message in SeaSondeR — seasonder_logAndAbort","title":"Log and Abort Message in SeaSondeR — seasonder_logAndAbort","text":"function logs message SeaSondeR logging system also aborts execution. prefixes abort message name calling function.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndAbort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log and Abort Message in SeaSondeR — seasonder_logAndAbort","text":"","code":"seasonder_logAndAbort(msg, calling_function = NULL, ...)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndAbort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log and Abort Message in SeaSondeR — seasonder_logAndAbort","text":"msg character string indicating message calling_function function condition happened. NULL (default), code tries determine one . ... passed rlang::abort","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndAbort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log and Abort Message in SeaSondeR — seasonder_logAndAbort","text":"invisible NULL. function modifies shared environment seasonder_the place logs enabled.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndAbort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log and Abort Message in SeaSondeR — seasonder_logAndAbort","text":"","code":"if (FALSE) { my_function <- function() {   seasonder_logAndAbort(\"This is a message\") } my_function() }"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Log and Inform Message in SeaSondeR — seasonder_logAndMessage","title":"Log and Inform Message in SeaSondeR — seasonder_logAndMessage","text":"function logs message SeaSondeR logging system also informs message console. prefixes message name calling function.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log and Inform Message in SeaSondeR — seasonder_logAndMessage","text":"","code":"seasonder_logAndMessage(msg, log_level = \"info\", calling_function = NULL, ...)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log and Inform Message in SeaSondeR — seasonder_logAndMessage","text":"msg character string indicating message logged informed. log_level character string indicating level log (\"info\", \"error\", \"fatal\"). Default \"info\". calling_function function condition happened. NULL (default), code tries determine one . ... passed rlang::inform (log_level=\"info\") rlang::warn (log_level=\"error\").","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndMessage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log and Inform Message in SeaSondeR — seasonder_logAndMessage","text":"invisible NULL. function modifies shared environment seasonder_the place logs enabled, informs message messages enabled.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logAndMessage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log and Inform Message in SeaSondeR — seasonder_logAndMessage","text":"","code":"if (FALSE) { my_function <- function() {   seasonder_logAndMessage(\"This is a message\", \"info\") } my_function() }"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logArchiver.html","id":null,"dir":"Reference","previous_headings":"","what":"Archive Log Entries — seasonder_logArchiver","title":"Archive Log Entries — seasonder_logArchiver","text":"Archives log entries based levels: INFO, ERROR, FATAL. paths provided, temporary files used.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logArchiver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Archive Log Entries — seasonder_logArchiver","text":"","code":"seasonder_logArchiver(   log_path = NULL,   log_info_path = log_path,   log_error_path = log_info_path,   log_fatal_path = log_error_path )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logArchiver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Archive Log Entries — seasonder_logArchiver","text":"log_path Path main log file. log_info_path Path INFO level log file. log_error_path Path ERROR level log file. log_fatal_path Path FATAL level log file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_logArchiver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Archive Log Entries — seasonder_logArchiver","text":"temporary files used, path main temporary log file returned. Otherwise, NULL.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_raw_to_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Raw Vector to a 64-bit Integer — seasonder_raw_to_int","title":"Convert a Raw Vector to a 64-bit Integer — seasonder_raw_to_int","text":"function converts raw vector 64-bit integer, handling signed unsigned conversions.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_raw_to_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Raw Vector to a 64-bit Integer — seasonder_raw_to_int","text":"","code":"seasonder_raw_to_int(r, signed = F)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_raw_to_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Raw Vector to a 64-bit Integer — seasonder_raw_to_int","text":"r raw vector converted. signed Logical, indicating whether conversion consider value signed (default FALSE unsigned).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_raw_to_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Raw Vector to a 64-bit Integer — seasonder_raw_to_int","text":"64-bit integer representation raw vector.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_raw_to_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Raw Vector to a 64-bit Integer — seasonder_raw_to_int","text":"","code":"if (FALSE) { r <- as.raw(c(0x12,0x34,0x56,0x78,0x90,0xAB,0xCD,0xEF)) seasonder_raw_to_int(r, signed = TRUE) }"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readCSField.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a CSField from a Binary Connection — seasonder_readCSField","title":"Read a CSField from a Binary Connection — seasonder_readCSField","text":"function reads specific data types binary connection, supporting various types including integer, float, double, complex, strings.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readCSField.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a CSField from a Binary Connection — seasonder_readCSField","text":"","code":"seasonder_readCSField(con, type, endian = \"big\")"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readCSField.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a CSField from a Binary Connection — seasonder_readCSField","text":"con connection object binary file. type character string identifying type data read. endian character string indicating byte order. Options \"big\" \"little\" (default \"big\").","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readCSField.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a CSField from a Binary Connection — seasonder_readCSField","text":"value read connection.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readCSField.html","id":"supported-data-types","dir":"Reference","previous_headings":"","what":"Supported Data Types","title":"Read a CSField from a Binary Connection — seasonder_readCSField","text":"function provides support reading variety data types binary connection. following data types recognized can used type argument: CharN Reads N characters connection N positive integer. example, Char5 read five characters. UInt8 Reads 8-bit unsigned integer. SInt8 Reads 8-bit signed integer. UInt16 Reads 16-bit unsigned integer. SInt16 Reads 16-bit signed integer. UInt32 Reads 32-bit unsigned integer. SInt32 Reads 32-bit signed integer. Float Reads single-precision floating-point number. Double Reads double-precision floating-point number. UInt64 Reads 64-bit unsigned integer. SInt64 Reads 64-bit signed integer. Complex Reads complex number separately reading real imaginary parts, represented double-precision floating-point numbers. String Reads null-terminated string. provided type match supported data types, function raises error.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readCSField.html","id":"condition-management","dir":"Reference","previous_headings":"","what":"Condition Management","title":"Read a CSField from a Binary Connection — seasonder_readCSField","text":"function utilizes rlang package manage conditions provide detailed structured condition messages: Condition Classes: seasonder_cs_field_reading_error: General error related reading CSField binary connection. seasonder_cs_field_skipped: Condition indicates CSField skipped due reading error. Condition Cases: Connection open. Error reading value connection. Read value length 0 connection (likely reached end file). Unrecognized data type specified. Restart Options: function provides structured mechanism recover errors execution using rlang::withRestarts function. following restart option available: seasonder_skip_cs_field(cond, value) allows graceful handling reading errors. restart invoked, function log error message indicating specific CSField reading skipped return value specified. restart takes two arguments: cond (condition error occurred) value (value return CSField reading skipped). invoke restart condition error, can use helper function seasonder_skip_cs_field(cond, value). Usage: custom condition handler, can call seasonder_skip_cs_field(cond, yourDesiredReturnValue) trigger restart skip current CSField reading. Effect: invoked, function logs error message detailing reason skipping, returns value specified restart function call.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readCSField.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a CSField from a Binary Connection — seasonder_readCSField","text":"","code":"if (FALSE) { con <- rawConnection(as.raw(c(0x12))) seasonder_readCSField(con, \"UInt8\") }"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SeaSonde Cross Spectra (CS) File — seasonder_readSeaSondeCSFile","title":"Read SeaSonde Cross Spectra (CS) File — seasonder_readSeaSondeCSFile","text":"function reads processes SeaSonde CS file, extracting header data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SeaSonde Cross Spectra (CS) File — seasonder_readSeaSondeCSFile","text":"","code":"seasonder_readSeaSondeCSFile(filepath, specs_path)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SeaSonde Cross Spectra (CS) File — seasonder_readSeaSondeCSFile","text":"filepath character string specifying path SeaSonde CS file. specs_path character string specifying path YAML specifications CS file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SeaSonde Cross Spectra (CS) File — seasonder_readSeaSondeCSFile","text":"list containing two components: header: list containing processed header information CS file. data: list containing processed data CS file. structure list depends content CS file can contain components SSA*, CSxy, QC.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read SeaSonde Cross Spectra (CS) File — seasonder_readSeaSondeCSFile","text":"function starts establishing connection CS file specified filepath. reads necessary metadata header specifications specs_path. Based CS file version determined header, applies specific adjustments header data. processing header, function validates CS file data using seasonder_validateCSFileData reads data via seasonder_readSeaSondeCSFileData.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFile.html","id":"condition-management","dir":"Reference","previous_headings":"","what":"Condition Management","title":"Read SeaSonde Cross Spectra (CS) File — seasonder_readSeaSondeCSFile","text":"function utilizes rlang package manage conditions provide detailed structured condition messages: Condition Classes: seasonder_read_cs_file_error: error class indicates general problem attempting read SeaSonde CS file. seasonder_cs_file_skipped: Condition indicating processing CS file skipped due error. Condition Cases: Failure open connection file. Unsupported version found specs file. error can arise dependent functions seasonder_readSeaSondeCSFileHeader seasonder_readSeaSondeCSFileData. Restart Options: function provides structured mechanism recover errors execution using rlang::withRestarts function. following restart option available: seasonder_skip_cs_file(cond) allows graceful handling file reading errors. restart invoked, function log error message indicating processing specific CS file skipped return list header = NULL data = NULL. restart takes one argument: cond (condition error occurred). Usage: custom condition handler, can call seasonder_skip_cs_file(cond) trigger restart skip processing current CS file. Effect: invoked, function logs error message detailing reason skipping file returns list header data set NULL.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFile.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read SeaSonde Cross Spectra (CS) File — seasonder_readSeaSondeCSFile","text":"Cross Spectra File Format Version 6. CODAR. 2016","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Apply Quality Control to a Block of Fields — seasonder_readSeaSondeCSFileBlock","title":"Read and Apply Quality Control to a Block of Fields — seasonder_readSeaSondeCSFileBlock","text":"Reads block fields binary file based provided specifications. field read processed specified quality control function.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileBlock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Apply Quality Control to a Block of Fields — seasonder_readSeaSondeCSFileBlock","text":"","code":"seasonder_readSeaSondeCSFileBlock(spec, connection, endian = \"big\")"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Apply Quality Control to a Block of Fields — seasonder_readSeaSondeCSFileBlock","text":"spec named list specifications fields read. specification form: list(type = \"data_type\", qc_fun = \"qc_function_name\", qc_params = list(param1 = value1, ...)) : type: data type read, passed seasonder_readCSField. qc_fun: name quality control function. function present shared environment seasonder_the must accept field_value first argument, followed arguments specified qc_params. qc_params: list additional parameters pass quality control function. connection connection binary file. endian character string indicating byte order. Options \"big\" \"little\" (default \"big\").","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileBlock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Apply Quality Control to a Block of Fields — seasonder_readSeaSondeCSFileBlock","text":"named list entry corresponds field read. key field name, associated value data field quality control.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileBlock.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read and Apply Quality Control to a Block of Fields — seasonder_readSeaSondeCSFileBlock","text":"quality control (QC) functions (qc_fun) specified within spec play pivotal role ensuring reliability data read. expected behavior QC functions: Input: field_value: Value field read binary file using seasonder_readCSField function. ...: Additional parameters specified qc_params passed qc_fun quality control. Functioning: QC function receives read value performs checks transformations based defined rules parameters. QC failure: QC function responsible determining action take. can log error, return default value, impute value, . critical errors, QC function halt execution. However, note logging managed QC function necessarily halt execution every case. success: QC function return value (either unchanged transformed). Output: Value validated transformed based quality control rules. Additional Notes: action QC failure directly implemented within QC function. Reading errors managed seasonder_readCSField function, returns NULL case error. QC function decide receives NULL.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileData.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SeaSonde Cross Spectra (CS) File Data — seasonder_readSeaSondeCSFileData","title":"Read SeaSonde Cross Spectra (CS) File Data — seasonder_readSeaSondeCSFileData","text":"function reads SeaSonde CS file data based provided header information. CS file data includes antenna voltage squared self spectra (SSA*) antenna cross spectra (CSxy). Additionally, quality matrix (QC) read header's nCsKind greater equal 2.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SeaSonde Cross Spectra (CS) File Data — seasonder_readSeaSondeCSFileData","text":"","code":"seasonder_readSeaSondeCSFileData(connection, header, endian = \"big\")"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SeaSonde Cross Spectra (CS) File Data — seasonder_readSeaSondeCSFileData","text":"connection connection object CS file. header list containing header information. typically output seasonder_readSeaSondeCSFileHeader function. endian Character string indicating byte order. Options \"big\" (default) \"little\".","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SeaSonde Cross Spectra (CS) File Data — seasonder_readSeaSondeCSFileData","text":"list containing matrices SSA*, CSxy, QC (applicable).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read SeaSonde Cross Spectra (CS) File Data — seasonder_readSeaSondeCSFileData","text":"SSA*: Represents Antenna * voltage squared self spectra. matrices row corresponds range column Doppler cell. CSxy: Represents cross spectra two antennas x y. complex matrices. QC: Quality matrix values ranging zero one. value less one indicates SpectraAverager skipped data averaging.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileData.html","id":"condition-management","dir":"Reference","previous_headings":"","what":"Condition Management","title":"Read SeaSonde Cross Spectra (CS) File Data — seasonder_readSeaSondeCSFileData","text":"function utilizes rlang package manage errors conditions, providing detailed structured messages: Error Classes: \"seasonder_cs_data_reading_error\": error thrown problem reading CS file data. due issues connection object file . \"seasonder_cs_missing_header_info_error\": Thrown essential header information nRangeCells, nDopplerCells, nCsKind missing invalid. Error Cases: Connection object properly opened invalid. Header information incomplete improperly formatted. File read operations fail due incorrect data size, type, unexpected end file. Non-numeric values encountered numeric spectra data expected.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeader.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the SeaSonde CS File Header — seasonder_readSeaSondeCSFileHeader","title":"Read the SeaSonde CS File Header — seasonder_readSeaSondeCSFileHeader","text":"function reads processes header SeaSonde CS file. initially reads general header (Version 1) determine file version. Subsequent headers processed based file version.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the SeaSonde CS File Header — seasonder_readSeaSondeCSFileHeader","text":"","code":"seasonder_readSeaSondeCSFileHeader(specs, connection, endian = \"big\")"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the SeaSonde CS File Header — seasonder_readSeaSondeCSFileHeader","text":"specs List header specifications version. connection file connection. endian Character string indicating byte order, either \"big\" (default) \"little\".","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the SeaSonde CS File Header — seasonder_readSeaSondeCSFileHeader","text":"combined list processed headers file version.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV1.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SeaSonde File Header (Version 1) — seasonder_readSeaSondeCSFileHeaderV1","title":"Read SeaSonde File Header (Version 1) — seasonder_readSeaSondeCSFileHeaderV1","text":"Reads header SeaSonde file (Version 1) based provided specifications. Transforms date-time fields returns results.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SeaSonde File Header (Version 1) — seasonder_readSeaSondeCSFileHeaderV1","text":"","code":"seasonder_readSeaSondeCSFileHeaderV1(   specs,   connection,   endian = \"big\",   prev_data = NULL )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SeaSonde File Header (Version 1) — seasonder_readSeaSondeCSFileHeaderV1","text":"specs list containing specifications reading file. connection Connection object file. endian Character string specifying endianness. Default \"big\". prev_data previous header data","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SeaSonde File Header (Version 1) — seasonder_readSeaSondeCSFileHeaderV1","text":"list read transformed results.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV2.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SeaSonde File Header (Version 2) — seasonder_readSeaSondeCSFileHeaderV2","title":"Read SeaSonde File Header (Version 2) — seasonder_readSeaSondeCSFileHeaderV2","text":"Reads header SeaSonde file (Version 2) based provided specifications.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SeaSonde File Header (Version 2) — seasonder_readSeaSondeCSFileHeaderV2","text":"","code":"seasonder_readSeaSondeCSFileHeaderV2(   specs,   connection,   endian = \"big\",   prev_data = NULL )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SeaSonde File Header (Version 2) — seasonder_readSeaSondeCSFileHeaderV2","text":"specs list containing specifications reading file. connection Connection object file. endian Character string specifying endianness. Default \"big\". prev_data previous header data","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SeaSonde File Header (Version 2) — seasonder_readSeaSondeCSFileHeaderV2","text":"list read results.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV3.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SeaSonde File Header (Version 3) — seasonder_readSeaSondeCSFileHeaderV3","title":"Read SeaSonde File Header (Version 3) — seasonder_readSeaSondeCSFileHeaderV3","text":"Reads header SeaSonde file (Version 3) based provided specifications. Adds nRangeCells, nDopplerCells, nFirstRangeCell constant values results.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SeaSonde File Header (Version 3) — seasonder_readSeaSondeCSFileHeaderV3","text":"","code":"seasonder_readSeaSondeCSFileHeaderV3(   specs,   connection,   endian = \"big\",   prev_data = NULL )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SeaSonde File Header (Version 3) — seasonder_readSeaSondeCSFileHeaderV3","text":"specs list containing specifications reading file. connection Connection object file. endian Character string specifying endianness. Default \"big\". prev_data previous header data","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SeaSonde File Header (Version 3) — seasonder_readSeaSondeCSFileHeaderV3","text":"list read results.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV4.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SeaSonde File Header (Version 4) — seasonder_readSeaSondeCSFileHeaderV4","title":"Read SeaSonde File Header (Version 4) — seasonder_readSeaSondeCSFileHeaderV4","text":"Reads header SeaSonde file (Version 4) based provided specifications. Transforms CenterFreq field returns results.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SeaSonde File Header (Version 4) — seasonder_readSeaSondeCSFileHeaderV4","text":"","code":"seasonder_readSeaSondeCSFileHeaderV4(   specs,   connection,   endian = \"big\",   prev_data = NULL )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SeaSonde File Header (Version 4) — seasonder_readSeaSondeCSFileHeaderV4","text":"specs list containing specifications reading file. connection Connection object file. endian Character string specifying endianness. Default \"big\". prev_data previous header data","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SeaSonde File Header (Version 4) — seasonder_readSeaSondeCSFileHeaderV4","text":"list read transformed results.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV5.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SeaSonde File Header (Version 5) — seasonder_readSeaSondeCSFileHeaderV5","title":"Read SeaSonde File Header (Version 5) — seasonder_readSeaSondeCSFileHeaderV5","text":"Reads header SeaSonde file (Version 5) based provided specifications. Performs applicable transformations returns results.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SeaSonde File Header (Version 5) — seasonder_readSeaSondeCSFileHeaderV5","text":"","code":"seasonder_readSeaSondeCSFileHeaderV5(   specs,   connection,   endian = \"big\",   prev_data = NULL )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SeaSonde File Header (Version 5) — seasonder_readSeaSondeCSFileHeaderV5","text":"specs list containing specifications reading file. connection Connection object file. endian Character string specifying endianness. Default \"big\". prev_data previous header data","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SeaSonde File Header (Version 5) — seasonder_readSeaSondeCSFileHeaderV5","text":"list read transformed results.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV6.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SeaSonde CS File Header V6 — seasonder_readSeaSondeCSFileHeaderV6","title":"Read SeaSonde CS File Header V6 — seasonder_readSeaSondeCSFileHeaderV6","text":"function reads header SeaSonde CS File Version 6. sequentially reads blocks based provided specifications returns read data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SeaSonde CS File Header V6 — seasonder_readSeaSondeCSFileHeaderV6","text":"","code":"seasonder_readSeaSondeCSFileHeaderV6(   specs,   connection,   endian = \"big\",   prev_data = NULL )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SeaSonde CS File Header V6 — seasonder_readSeaSondeCSFileHeaderV6","text":"specs list specifications reading file header. contain three main elements: nCS6ByteSize, block_spec, blocks, containing specifications reading various parts header. connection connection object SeaSonde CS file. endian byte order reading file. Default \"big\". prev_data Previous data, , might affect current reading. Default NULL.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SeaSonde CS File Header V6 — seasonder_readSeaSondeCSFileHeaderV6","text":"list containing read data, organized based block keys.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeCSFileHeaderV6.html","id":"condition-management","dir":"Reference","previous_headings":"","what":"Condition Management","title":"Read SeaSonde CS File Header V6 — seasonder_readSeaSondeCSFileHeaderV6","text":"function utilizes rlang package manage conditions provide detailed structured condition messages: Condition Classes: seasonder_v6_block_transformacion_skipped: Triggered transformation specific block skipped. seasonder_v6_transform_function_error: Triggered error applying transformation function V6 header block. seasonder_v6_skip_block_error: Triggered error skipping block. Condition Cases: following scenarios errors conditions raised: Transformation Failure: recognized block key transformation function associated fails. Error Transformation Function Application: error applying transformation function recognized V6 header block. Error Skipping Block: error skipping block block key recognized. Restart Options: function provides following restart option: seasonder_v6_skip_transformation: restart allows users skip transformation specific block instead return provided value. Effects Restart Options: Using seasonder_v6_skip_transformation restart: error message gets logged. transformation caused error gets skipped. provided value block returned. Proper error management ensures integrity reading process provides detailed feedback users regarding issues potential resolutions.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeRAPMFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeRAPMFile","title":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeRAPMFile","text":"function reads SeaSonde APM file returns SeaSondeRAPM object containing parsed data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeRAPMFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeRAPMFile","text":"","code":"seasonder_readSeaSondeRAPMFile(   file_path,   override_antenna_bearing = NULL,   override_phase_corrections = NULL,   override_amplitude_factors = NULL,   override_SiteOrigin = NULL,   ... )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeRAPMFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeRAPMFile","text":"file_path path SeaSonde APM file read. override_antenna_bearing NULL, overrides Antenna Bearing data file ... Additional arguments passed object creation function (See seasonder_createSeaSondeRAPM details).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeRAPMFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeRAPMFile","text":"Returns SeaSondeRAPM object containing parsed data.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readYAMLSpecs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Specifications from a YAML File — seasonder_readYAMLSpecs","title":"Read Specifications from a YAML File — seasonder_readYAMLSpecs","text":"function reads YAML file containing specifications, handles potential reading errors, extracts specific information based provided path.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readYAMLSpecs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Specifications from a YAML File — seasonder_readYAMLSpecs","text":"","code":"seasonder_readYAMLSpecs(file_path, path)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readYAMLSpecs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Specifications from a YAML File — seasonder_readYAMLSpecs","text":"file_path string. path YAML file. path character vector. Represents path within YAML file access desired information. example, access fields version V2 header, path c(\"header\", \"versions\", \"V2\").","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readYAMLSpecs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Specifications from a YAML File — seasonder_readYAMLSpecs","text":"list. information extracted YAML file based provided path.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readYAMLSpecs.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error Handling","title":"Read Specifications from a YAML File — seasonder_readYAMLSpecs","text":"function built-error handling aborts function's execution logs detailed error messages case : File found. Error reading YAML content. read YAML content list type. data found provided path YAML content. Errors generated class \"seasonder_read_yaml_file_error\". Detailed error information including file path path within file provided. logging aborting, function utilizes seasonder_logAndAbort function.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readYAMLSpecs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Specifications from a YAML File — seasonder_readYAMLSpecs","text":"","code":"if (FALSE) { # Assuming a YAML file named \"example.yaml\" exists with appropriate content result <- seasonder_readYAMLSpecs(\"example.yaml\", c(\"header\", \"versions\", \"V2\")) print(result) }"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectDistantBragg.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements SpectraPlotterMap First Order Setting: Reject Bragg when First Order is far from index — seasonder_rejectDistantBragg","title":"Implements SpectraPlotterMap First Order Setting: Reject Bragg when First Order is far from index — seasonder_rejectDistantBragg","text":"Implements SpectraPlotterMap First Order Setting: Reject Bragg First Order far index","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectDistantBragg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements SpectraPlotterMap First Order Setting: Reject Bragg when First Order is far from index — seasonder_rejectDistantBragg","text":"","code":"seasonder_rejectDistantBragg(seasonder_cs_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectDistantBragg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Implements SpectraPlotterMap First Order Setting: Reject Bragg when First Order is far from index — seasonder_rejectDistantBragg","text":"applied, reject First Order limits farther away Bragg index width first order. turned site’s field view water limited sees string positive current given time.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectDistantBraggPeakTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reject Distant Bragg Peaks — seasonder_rejectDistantBraggPeakTest","title":"Reject Distant Bragg Peaks — seasonder_rejectDistantBraggPeakTest","text":"function evaluates Bragg peaks based proximity expected Bragg line bins. boundaries peak farther Bragg lines width peak , peak rejected setting empty integer vector.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectDistantBraggPeakTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reject Distant Bragg Peaks — seasonder_rejectDistantBraggPeakTest","text":"","code":"seasonder_rejectDistantBraggPeakTest(   seasonder_cs_obj,   peak,   range = NA,   peak_name = \"\" )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectDistantBraggPeakTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reject Distant Bragg Peaks — seasonder_rejectDistantBraggPeakTest","text":"seasonder_cs_obj object representing current state radar cross section analysis, expected contain methods properties needed determine Bragg lines. peak numeric vector indicating positions peak consideration. range Optional; numeric integer NA indicating range consider peak. Defaults NA specified. peak_name Optional; character string representing name identifier peak. Defaults empty string specified.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectDistantBraggPeakTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reject Distant Bragg Peaks — seasonder_rejectDistantBraggPeakTest","text":"Returns possibly modified version peak argument, rejected peak returned integer(0), indicating valid peak present.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectDistantBraggPeakTest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reject Distant Bragg Peaks — seasonder_rejectDistantBraggPeakTest","text":"function computes left right limits given peak checks distance limits nearest Bragg lines exceeds width peak. boundaries exceed threshold, peak rejected.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectNoiseIonospheric.html","id":null,"dir":"Reference","previous_headings":"","what":"Reject Ionospheric Noise in SeaSonde Data — seasonder_rejectNoiseIonospheric","title":"Reject Ionospheric Noise in SeaSonde Data — seasonder_rejectNoiseIonospheric","text":"function rejects negative positive Bragg peaks total external (non-Bragg) power greater Bragg power specified dB amount. applied across range negative positive Bragg peaks.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectNoiseIonospheric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reject Ionospheric Noise in SeaSonde Data — seasonder_rejectNoiseIonospheric","text":"","code":"seasonder_rejectNoiseIonospheric(seasonder_cs_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectNoiseIonospheric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reject Ionospheric Noise in SeaSonde Data — seasonder_rejectNoiseIonospheric","text":"seasonder_cs_obj SeaSonde cross-section object, contains data various ranges peaks need processing.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectNoiseIonospheric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reject Ionospheric Noise in SeaSonde Data — seasonder_rejectNoiseIonospheric","text":"Returns modified SeaSonde cross-section object appropriate Bragg peaks rejected.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rejectNoiseIonospheric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reject Ionospheric Noise in SeaSonde Data — seasonder_rejectNoiseIonospheric","text":"function iterates range applies test negative positive Bragg peak. uses seasonder_rejectNoiseIonosphericTest function evaluate whether Bragg peak rejected based comparison Bragg non-Bragg power levels.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rerun_qc_with_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Structured Restart for Quality Control — seasonder_rerun_qc_with_fun","title":"Structured Restart for Quality Control — seasonder_rerun_qc_with_fun","text":"Provides structured restart mechanism rerun quality control (QC) function alternative function execution read_and_qc_field. allows flexible error recovery strategy initial QC function fails deemed inadequate.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rerun_qc_with_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Structured Restart for Quality Control — seasonder_rerun_qc_with_fun","text":"","code":"seasonder_rerun_qc_with_fun(cond, qc_fun)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rerun_qc_with_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Structured Restart for Quality Control — seasonder_rerun_qc_with_fun","text":"cond condition object captured execution read_and_qc_field function. qc_fun alternate quality control function apply. function accept value field sole argument return QC-applied value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rerun_qc_with_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Structured Restart for Quality Control — seasonder_rerun_qc_with_fun","text":"value returned alternate QC function qc_fun.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_rerun_qc_with_fun.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Structured Restart for Quality Control — seasonder_rerun_qc_with_fun","text":"function meant used within custom condition handlers read_and_qc_field function.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_AmplitudeFactors.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for AmplitudeFactors — seasonder_setSeaSondeRAPM_AmplitudeFactors","title":"Setter for AmplitudeFactors — seasonder_setSeaSondeRAPM_AmplitudeFactors","text":"Setter AmplitudeFactors","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_AmplitudeFactors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for AmplitudeFactors — seasonder_setSeaSondeRAPM_AmplitudeFactors","text":"","code":"seasonder_setSeaSondeRAPM_AmplitudeFactors(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_AmplitudeFactors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for AmplitudeFactors — seasonder_setSeaSondeRAPM_AmplitudeFactors","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_AntennaBearing.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for AntennaBearing — seasonder_setSeaSondeRAPM_AntennaBearing","title":"Setter for AntennaBearing — seasonder_setSeaSondeRAPM_AntennaBearing","text":"Setter AntennaBearing","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_AntennaBearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for AntennaBearing — seasonder_setSeaSondeRAPM_AntennaBearing","text":"","code":"seasonder_setSeaSondeRAPM_AntennaBearing(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_AntennaBearing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for AntennaBearing — seasonder_setSeaSondeRAPM_AntennaBearing","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_BEAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for BEAR — seasonder_setSeaSondeRAPM_BEAR","title":"Setter for BEAR — seasonder_setSeaSondeRAPM_BEAR","text":"Setter BEAR","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_BEAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for BEAR — seasonder_setSeaSondeRAPM_BEAR","text":"","code":"seasonder_setSeaSondeRAPM_BEAR(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_BEAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for BEAR — seasonder_setSeaSondeRAPM_BEAR","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_BearingResolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for BearingResolution — seasonder_setSeaSondeRAPM_BearingResolution","title":"Setter for BearingResolution — seasonder_setSeaSondeRAPM_BearingResolution","text":"Setter BearingResolution","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_BearingResolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for BearingResolution — seasonder_setSeaSondeRAPM_BearingResolution","text":"","code":"seasonder_setSeaSondeRAPM_BearingResolution(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_BearingResolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for BearingResolution — seasonder_setSeaSondeRAPM_BearingResolution","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_CommentLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for CommentLine — seasonder_setSeaSondeRAPM_CommentLine","title":"Setter for CommentLine — seasonder_setSeaSondeRAPM_CommentLine","text":"Setter CommentLine","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_CommentLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for CommentLine — seasonder_setSeaSondeRAPM_CommentLine","text":"","code":"seasonder_setSeaSondeRAPM_CommentLine(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_CommentLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for CommentLine — seasonder_setSeaSondeRAPM_CommentLine","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_CreateTimeStamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for CreateTimeStamp — seasonder_setSeaSondeRAPM_CreateTimeStamp","title":"Setter for CreateTimeStamp — seasonder_setSeaSondeRAPM_CreateTimeStamp","text":"Setter CreateTimeStamp","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_CreateTimeStamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for CreateTimeStamp — seasonder_setSeaSondeRAPM_CreateTimeStamp","text":"","code":"seasonder_setSeaSondeRAPM_CreateTimeStamp(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_CreateTimeStamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for CreateTimeStamp — seasonder_setSeaSondeRAPM_CreateTimeStamp","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_Creator.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for Creator — seasonder_setSeaSondeRAPM_Creator","title":"Setter for Creator — seasonder_setSeaSondeRAPM_Creator","text":"Setter Creator","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_Creator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for Creator — seasonder_setSeaSondeRAPM_Creator","text":"","code":"seasonder_setSeaSondeRAPM_Creator(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_Creator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for Creator — seasonder_setSeaSondeRAPM_Creator","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_FileID.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for FileID — seasonder_setSeaSondeRAPM_FileID","title":"Setter for FileID — seasonder_setSeaSondeRAPM_FileID","text":"Setter FileID","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_FileID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for FileID — seasonder_setSeaSondeRAPM_FileID","text":"","code":"seasonder_setSeaSondeRAPM_FileID(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_FileID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for FileID — seasonder_setSeaSondeRAPM_FileID","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_FileName.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for FileName — seasonder_setSeaSondeRAPM_FileName","title":"Setter for FileName — seasonder_setSeaSondeRAPM_FileName","text":"Setter FileName","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_FileName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for FileName — seasonder_setSeaSondeRAPM_FileName","text":"","code":"seasonder_setSeaSondeRAPM_FileName(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_FileName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for FileName — seasonder_setSeaSondeRAPM_FileName","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_PhaseCorrections.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for PhaseCorrections — seasonder_setSeaSondeRAPM_PhaseCorrections","title":"Setter for PhaseCorrections — seasonder_setSeaSondeRAPM_PhaseCorrections","text":"Setter PhaseCorrections","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_PhaseCorrections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for PhaseCorrections — seasonder_setSeaSondeRAPM_PhaseCorrections","text":"","code":"seasonder_setSeaSondeRAPM_PhaseCorrections(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_PhaseCorrections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for PhaseCorrections — seasonder_setSeaSondeRAPM_PhaseCorrections","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_ProcessingSteps.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for ProcessingSteps — seasonder_setSeaSondeRAPM_ProcessingSteps","title":"Setter for ProcessingSteps — seasonder_setSeaSondeRAPM_ProcessingSteps","text":"Setter ProcessingSteps","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_ProcessingSteps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for ProcessingSteps — seasonder_setSeaSondeRAPM_ProcessingSteps","text":"","code":"seasonder_setSeaSondeRAPM_ProcessingSteps(   seasonde_apm_obj,   new_value,   append = TRUE )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_ProcessingSteps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for ProcessingSteps — seasonder_setSeaSondeRAPM_ProcessingSteps","text":"seasonde_apm_obj SeaSonderAPM object new_value new value append append new step replace previous steps? Default: TRUE","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_SiteName.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for SiteName — seasonder_setSeaSondeRAPM_SiteName","title":"Setter for SiteName — seasonder_setSeaSondeRAPM_SiteName","text":"Setter SiteName","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_SiteName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for SiteName — seasonder_setSeaSondeRAPM_SiteName","text":"","code":"seasonder_setSeaSondeRAPM_SiteName(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_SiteName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for SiteName — seasonder_setSeaSondeRAPM_SiteName","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_SiteOrigin.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for SiteOrigin — seasonder_setSeaSondeRAPM_SiteOrigin","title":"Setter for SiteOrigin — seasonder_setSeaSondeRAPM_SiteOrigin","text":"Setter SiteOrigin","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_SiteOrigin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for SiteOrigin — seasonder_setSeaSondeRAPM_SiteOrigin","text":"","code":"seasonder_setSeaSondeRAPM_SiteOrigin(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_SiteOrigin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for SiteOrigin — seasonder_setSeaSondeRAPM_SiteOrigin","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_Smoothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for Smoothing — seasonder_setSeaSondeRAPM_Smoothing","title":"Setter for Smoothing — seasonder_setSeaSondeRAPM_Smoothing","text":"Setter Smoothing","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_Smoothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for Smoothing — seasonder_setSeaSondeRAPM_Smoothing","text":"","code":"seasonder_setSeaSondeRAPM_Smoothing(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_Smoothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for Smoothing — seasonder_setSeaSondeRAPM_Smoothing","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_StationCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for StationCode — seasonder_setSeaSondeRAPM_StationCode","title":"Setter for StationCode — seasonder_setSeaSondeRAPM_StationCode","text":"Setter StationCode","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_StationCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for StationCode — seasonder_setSeaSondeRAPM_StationCode","text":"","code":"seasonder_setSeaSondeRAPM_StationCode(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_StationCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for StationCode — seasonder_setSeaSondeRAPM_StationCode","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_Type.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for Type — seasonder_setSeaSondeRAPM_Type","title":"Setter for Type — seasonder_setSeaSondeRAPM_Type","text":"Setter Type","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_Type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for Type — seasonder_setSeaSondeRAPM_Type","text":"","code":"seasonder_setSeaSondeRAPM_Type(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_Type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for Type — seasonder_setSeaSondeRAPM_Type","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_quality_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for quality_matrix — seasonder_setSeaSondeRAPM_quality_matrix","title":"Setter for quality_matrix — seasonder_setSeaSondeRAPM_quality_matrix","text":"Setter quality_matrix","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_quality_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for quality_matrix — seasonder_setSeaSondeRAPM_quality_matrix","text":"","code":"seasonder_setSeaSondeRAPM_quality_matrix(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRAPM_quality_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for quality_matrix — seasonder_setSeaSondeRAPM_quality_matrix","text":"seasonde_apm_obj SeaSonderAPM object new_value new value","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRCS_ProcessingSteps.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for ProcessingSteps — seasonder_setSeaSondeRCS_ProcessingSteps","title":"Setter for ProcessingSteps — seasonder_setSeaSondeRCS_ProcessingSteps","text":"Setter ProcessingSteps","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRCS_ProcessingSteps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for ProcessingSteps — seasonder_setSeaSondeRCS_ProcessingSteps","text":"","code":"seasonder_setSeaSondeRCS_ProcessingSteps(   seasonder_cs_obj,   processing_steps,   append = TRUE )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRCS_ProcessingSteps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for ProcessingSteps — seasonder_setSeaSondeRCS_ProcessingSteps","text":"seasonder_cs_obj SeaSondeRCS object processing_steps new value append append new step replace previous steps? Default: TRUE","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRCS_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for data — seasonder_setSeaSondeRCS_data","title":"Setter for data — seasonder_setSeaSondeRCS_data","text":"Setter data","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRCS_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for data — seasonder_setSeaSondeRCS_data","text":"","code":"seasonder_setSeaSondeRCS_data(seasonder_cs_obj, data)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRCS_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for data — seasonder_setSeaSondeRCS_data","text":"seasonder_cs_obj SeaSondeRCS object data new value","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRCS_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Setter for header — seasonder_setSeaSondeRCS_header","title":"Setter for header — seasonder_setSeaSondeRCS_header","text":"Setter header","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRCS_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setter for header — seasonder_setSeaSondeRCS_header","text":"","code":"seasonder_setSeaSondeRCS_header(seasonder_cs_obj, header)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_setSeaSondeRCS_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setter for header — seasonder_setSeaSondeRCS_header","text":"seasonder_cs_obj SeaSondeRCS object header new value","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip Reading a CSField and Return a Specified Value — seasonder_skip_cs_field","title":"Skip Reading a CSField and Return a Specified Value — seasonder_skip_cs_field","text":"function convenience mechanism invoke seasonder_skip_cs_field restart option. can used custom condition handlers reading CSField binary connection encounters error condition. called, indicates intention skip reading current CSField return specific value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip Reading a CSField and Return a Specified Value — seasonder_skip_cs_field","text":"","code":"seasonder_skip_cs_field(cond, value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skip Reading a CSField and Return a Specified Value — seasonder_skip_cs_field","text":"cond condition error occurred reading CSField. value desired return value use place CSField reading encountered error.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip Reading a CSField and Return a Specified Value — seasonder_skip_cs_field","text":"Returns value specified value parameter.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_field.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Skip Reading a CSField and Return a Specified Value — seasonder_skip_cs_field","text":"execution seasonder_readCSField function, errors conditions can occur. provide structured mechanism handle cases, function utilizes rlang::withRestarts mechanism, offering restart option named seasonder_skip_cs_field. restart allows function gracefully handle reading errors logging relevant error message returning specified value. seasonder_skip_cs_field function provides easy way invoke restart. called within custom condition handler, signals intention skip current CSField reading due error specifies return value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip SeaSonde Cross Spectra (CS) File Reading — seasonder_skip_cs_file","title":"Skip SeaSonde Cross Spectra (CS) File Reading — seasonder_skip_cs_file","text":"function serves restart seasonder_readSeaSondeCSFile. invoked, provides mechanism gracefully handle file reading errors logging error message skipping current file processing.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip SeaSonde Cross Spectra (CS) File Reading — seasonder_skip_cs_file","text":"","code":"seasonder_skip_cs_file(cond)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Skip SeaSonde Cross Spectra (CS) File Reading — seasonder_skip_cs_file","text":"cond condition error occurred file reading process. used log detailed error message indicating reason skipping file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip SeaSonde Cross Spectra (CS) File Reading — seasonder_skip_cs_file","text":"invoked, function returns list header data set NULL.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_skip_cs_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Skip SeaSonde Cross Spectra (CS) File Reading — seasonder_skip_cs_file","text":"function meant used within custom condition handler. problematic condition arises processing SeaSonde CS file, can call seasonder_skip_cs_file(cond) trigger restart, allows graceful degradation logging error message skipping file. effect invoking restart twofold: error message detailing reason skipping file logged. calling function (seasonder_readSeaSondeCSFile) immediately return list header = NULL data = NULL.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_splitLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Logs Based on Time Thresholds — seasonder_splitLog","title":"Split Logs Based on Time Thresholds — seasonder_splitLog","text":"function splits log entries blocks based time gaps timestamps. threshold splitting can provided calculated based gaps log timestamps.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_splitLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Logs Based on Time Thresholds — seasonder_splitLog","text":"","code":"seasonder_splitLog(   threshold = NULL,   threshold_factor = 4,   threshold_quantile = 0.9,   min_threshold_secs = 10 )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_splitLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Logs Based on Time Thresholds — seasonder_splitLog","text":"threshold time difference threshold splitting logs. NULL, calculated. threshold_factor Multiplicative factor applied calculated threshold. threshold_quantile Quantile used threshold calculation threshold NULL. min_threshold_secs Minimum threshold seconds.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_splitLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Logs Based on Time Thresholds — seasonder_splitLog","text":"list log blocks, block vector log entries.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_v6_skip_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigger Restart for Skipping Transformation — seasonder_v6_skip_transformation","title":"Trigger Restart for Skipping Transformation — seasonder_v6_skip_transformation","text":"function provides mechanism invoke restart reading transformation process SeaSonde CS File Version 6 header. allows users skip transformations may caused errors proceed provided value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_v6_skip_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigger Restart for Skipping Transformation — seasonder_v6_skip_transformation","text":"","code":"seasonder_v6_skip_transformation(cond, value)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_v6_skip_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigger Restart for Skipping Transformation — seasonder_v6_skip_transformation","text":"cond condition object triggered restart. value provided value used transformation skipped.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_v6_skip_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trigger Restart for Skipping Transformation — seasonder_v6_skip_transformation","text":"function standard return value. Instead, triggers restart can caught enclosing context handle error decide proceed.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_v6_skip_transformation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trigger Restart for Skipping Transformation — seasonder_v6_skip_transformation","text":"function specifically triggers seasonder_v6_skip_transformation restart allows skipping block transformation reading process SeaSonde CS File Version 6 header. triggered, logs error message, skips problematic transformation, returns provided value block.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_v6_skip_transformation.html","id":"integration-with-seasonde-cs-file-reading","dir":"Reference","previous_headings":"","what":"Integration with SeaSonde CS File Reading","title":"Trigger Restart for Skipping Transformation — seasonder_v6_skip_transformation","text":"restart mechanism function integrated within seasonder_readSeaSondeCSFileHeaderV6 function. error occurs transformation process specific block, restart provides users option skip problematic transformation proceed fallback value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeRAPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Attributes for a SeaSondeRAPM Object — seasonder_validateAttributesSeaSondeRAPM","title":"Validate Attributes for a SeaSondeRAPM Object — seasonder_validateAttributesSeaSondeRAPM","text":"function validates attributes given SeaSondeRAPM object ensure meet required specifications.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeRAPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Attributes for a SeaSondeRAPM Object — seasonder_validateAttributesSeaSondeRAPM","text":"","code":"seasonder_validateAttributesSeaSondeRAPM(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeRAPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Attributes for a SeaSondeRAPM Object — seasonder_validateAttributesSeaSondeRAPM","text":"seasonde_apm_obj SeaSondeRAPM object whose attributes validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeRAPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Attributes for a SeaSondeRAPM Object — seasonder_validateAttributesSeaSondeRAPM","text":"TRUE attributes valid. function stop execution display error message attributes invalid.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeRAPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Attributes for a SeaSondeRAPM Object — seasonder_validateAttributesSeaSondeRAPM","text":"function performs validation following attributes SeaSondeRAPM object: quality_matrix BEAR Type Creator SiteName SiteOrigin FileName CreateTimeStamp ProcessingSteps AmplitudeFactors AntennaBearing StationCode BearingResolution Smoothing CommentLine FileID PhaseCorrections internally calls specific validation functions attributes. attributes found invalid, function stop execution display error message. details attributes, see seasonder_initializeAttributesSeaSondeRAPM.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSDataStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the Data Structure of CrossSpectra Data — seasonder_validateCSDataStructure","title":"Validate the Data Structure of CrossSpectra Data — seasonder_validateCSDataStructure","text":"function checks validity data structure CrossSpectra (CS) data. ensures required fields present, dimensions matrices correct based nRanges nDoppler, types data fields expected.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSDataStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the Data Structure of CrossSpectra Data — seasonder_validateCSDataStructure","text":"","code":"seasonder_validateCSDataStructure(data, nRanges, nDoppler)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSDataStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the Data Structure of CrossSpectra Data — seasonder_validateCSDataStructure","text":"data list representing CrossSpectra (CS) data. contain fields \"SSA1\", \"SSA2\", \"SSA3\", \"CS12\", \"CS13\", \"CS23\", \"QC\". nRanges integer specifying expected number range cells. nDoppler integer specifying expected number Doppler cells.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSDataStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the Data Structure of CrossSpectra Data — seasonder_validateCSDataStructure","text":"Invisible NULL data structure valid. Otherwise, error thrown.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSDataStructure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate the Data Structure of CrossSpectra Data — seasonder_validateCSDataStructure","text":"function expects following structure data list: SSA1, SSA2, SSA3, QC: Matrices numeric values, dimensions nRanges x nDoppler. CS12, CS13, CS23: Matrices complex values, dimensions nRanges x nDoppler.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSDataStructure.html","id":"error-management","dir":"Reference","previous_headings":"","what":"Error Management","title":"Validate the Data Structure of CrossSpectra Data — seasonder_validateCSDataStructure","text":"function utilizes rlang package manage errors provide detailed structured error messages: Condition Classes: seasonder_CS_data_structure_validation_error: error class indicating problem data structure CrossSpectra (CS) data. Condition Cases: Missing fields data. Incorrect dimensions matrices data. Incorrect data type fields data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSDataStructure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate the Data Structure of CrossSpectra Data — seasonder_validateCSDataStructure","text":"","code":"if (FALSE) { data <- list(   SSA1 = matrix(rep(NA_real_, 10 * 20), ncol = 20, byrow = TRUE),   SSA2 = matrix(rep(NA_real_, 10 * 20), ncol = 20, byrow = TRUE),   # ... other fields ) seasonder_validateCSDataStructure(data, 10, 20) }"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSFileData.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate SeaSondeR CS File Data — seasonder_validateCSFileData","title":"Validate SeaSondeR CS File Data — seasonder_validateCSFileData","text":"function performs multiple validation checks provided CS file SeaSondeR system. checks file various conditions determine meets SeaSondeR standards.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSFileData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate SeaSondeR CS File Data — seasonder_validateCSFileData","text":"","code":"seasonder_validateCSFileData(filepath, header)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSFileData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate SeaSondeR CS File Data — seasonder_validateCSFileData","text":"filepath character string indicating path CS file validate. header list containing header information CS file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSFileData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate SeaSondeR CS File Data — seasonder_validateCSFileData","text":"NULL invisibly. function mainly serves validate stop execution log error using seasonder_logAndAbort condition fails.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSFileData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate SeaSondeR CS File Data — seasonder_validateCSFileData","text":"function performs following validation checks: Verifies file size greater 10 bytes. Validates nCsFileVersion field header ensure 1 32. Depending nCsFileVersion, verifies appropriate file size, extent various version headers (nV1Extent, nV2Extent, etc.). Validates nRangeCells nDopplerCells fields ensure within permissible ranges. Depending nCsKind value, validates file size expected sizes based nRangeCells, nSpectraChannels, nDopplerCells.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSFileData.html","id":"condition-management","dir":"Reference","previous_headings":"","what":"Condition Management","title":"Validate SeaSondeR CS File Data — seasonder_validateCSFileData","text":"function utilizes rlang package manage conditions provide detailed structured condition messages: Condition Classes: seasonder_validate_cs_file_error: error class indicates validation requirement met. Condition Cases: Failure validation test.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSFileData.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Validate SeaSondeR CS File Data — seasonder_validateCSFileData","text":"Cross Spectra File Format Version 6. CODAR. 2016","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSHeaderStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the Header of CrossSpectra Data — seasonder_validateCSHeaderStructure","title":"Validate the Header of CrossSpectra Data — seasonder_validateCSHeaderStructure","text":"function validates structure header list expected represent metadata cross spectra file. checks header indeed list whether mandatory elements, number range cells number Doppler cells, present.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSHeaderStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the Header of CrossSpectra Data — seasonder_validateCSHeaderStructure","text":"","code":"seasonder_validateCSHeaderStructure(header)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSHeaderStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the Header of CrossSpectra Data — seasonder_validateCSHeaderStructure","text":"header list representing header metadata cross spectra file.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSHeaderStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the Header of CrossSpectra Data — seasonder_validateCSHeaderStructure","text":"Invisible NULL header structure valid. Otherwise, error thrown.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSHeaderStructure.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate the Header of CrossSpectra Data — seasonder_validateCSHeaderStructure","text":"function primarily checks two conditions: Whether provided header argument list. Whether nRangeCells nDopplerCells present header.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCSHeaderStructure.html","id":"condition-management","dir":"Reference","previous_headings":"","what":"Condition Management","title":"Validate the Header of CrossSpectra Data — seasonder_validateCSHeaderStructure","text":"function utilizes rlang package manage conditions provide detailed structured condition messages: Condition Classes: seasonder_CS_header_is_not_a_list: Triggered header parameter list. seasonder_CS_missing_nRange_nDoppler_error: Triggered either nRangeCells nDopplerCells missing header. Condition Cases: header list, function throws error class seasonder_CS_header_is_not_a_list. either nRangeCells nDopplerCells missing, error class seasonder_CS_missing_nRange_nDoppler_error thrown.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeRAPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Calibration Matrix for a SeaSondeRAPM Object — seasonder_validateCalibrationMatrixSeaSondeRAPM","title":"Validate Calibration Matrix for a SeaSondeRAPM Object — seasonder_validateCalibrationMatrixSeaSondeRAPM","text":"function validates input calibration_matrix ensure meets required specifications use SeaSondeRAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeRAPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Calibration Matrix for a SeaSondeRAPM Object — seasonder_validateCalibrationMatrixSeaSondeRAPM","text":"","code":"seasonder_validateCalibrationMatrixSeaSondeRAPM(matrix)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeRAPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Calibration Matrix for a SeaSondeRAPM Object — seasonder_validateCalibrationMatrixSeaSondeRAPM","text":"matrix 2 x b complex matrix calibration, b number bearings.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeRAPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Calibration Matrix for a SeaSondeRAPM Object — seasonder_validateCalibrationMatrixSeaSondeRAPM","text":"TRUE matrix valid. function stop execution display error message matrix invalid.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeRAPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Calibration Matrix for a SeaSondeRAPM Object — seasonder_validateCalibrationMatrixSeaSondeRAPM","text":"function performs following validation checks: Confirms input matrix. Verifies matrix exactly two rows. Checks matrix contains complex numbers. validation steps fail, function log fatal error stop execution using rlang::abort.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_AmplitudeFactors.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate AmplitudeFactors Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AmplitudeFactors","title":"Validate AmplitudeFactors Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AmplitudeFactors","text":"function validates provided AmplitudeFactors numeric vector length 2.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_AmplitudeFactors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate AmplitudeFactors Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AmplitudeFactors","text":"","code":"validate_SeaSondeRAPM_AmplitudeFactors(factors)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_AmplitudeFactors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate AmplitudeFactors Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AmplitudeFactors","text":"factors numeric vector validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_AmplitudeFactors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate AmplitudeFactors Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AmplitudeFactors","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_AntennaBearing.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate AntennaBearing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AntennaBearing","title":"Validate AntennaBearing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AntennaBearing","text":"function validates provided AntennaBearing numeric value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_AntennaBearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate AntennaBearing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AntennaBearing","text":"","code":"validate_SeaSondeRAPM_AntennaBearing(bearing)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_AntennaBearing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate AntennaBearing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AntennaBearing","text":"bearing numeric value validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_AntennaBearing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate AntennaBearing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_AntennaBearing","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_BEAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BEAR Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BEAR","title":"Validate BEAR Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BEAR","text":"function validates provided BEAR numeric vector length matches number columns calibration_matrix given SeaSondeRAPM object. also validates bearings -180 180 degrees.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_BEAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BEAR Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BEAR","text":"","code":"validate_SeaSondeRAPM_BEAR(vector, seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_BEAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BEAR Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BEAR","text":"vector numeric vector validated. seasonde_apm_obj SeaSondeRAPM object compatibility check.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_BEAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BEAR Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BEAR","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_BearingResolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BearingResolution Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BearingResolution","title":"Validate BearingResolution Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BearingResolution","text":"function validates provided BearingResolution numeric value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_BearingResolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BearingResolution Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BearingResolution","text":"","code":"validate_SeaSondeRAPM_BearingResolution(resolution)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_BearingResolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BearingResolution Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BearingResolution","text":"resolution numeric value validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_BearingResolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BearingResolution Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_BearingResolution","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_CommentLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate CommentLine Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CommentLine","title":"Validate CommentLine Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CommentLine","text":"function validates provided CommentLine character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_CommentLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate CommentLine Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CommentLine","text":"","code":"validate_SeaSondeRAPM_CommentLine(comment)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_CommentLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate CommentLine Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CommentLine","text":"comment character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_CommentLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate CommentLine Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CommentLine","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_CreateTimeStamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate CreateTimeStamp Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CreateTimeStamp","title":"Validate CreateTimeStamp Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CreateTimeStamp","text":"function validates provided CreateTimeStamp POSIXct Date object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_CreateTimeStamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate CreateTimeStamp Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CreateTimeStamp","text":"","code":"validate_SeaSondeRAPM_CreateTimeStamp(timestamp)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_CreateTimeStamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate CreateTimeStamp Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CreateTimeStamp","text":"timestamp Date object validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_CreateTimeStamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate CreateTimeStamp Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_CreateTimeStamp","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Creator.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Creator Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Creator","title":"Validate Creator Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Creator","text":"function validates provided Creator character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Creator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Creator Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Creator","text":"","code":"validate_SeaSondeRAPM_Creator(creator)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Creator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Creator Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Creator","text":"creator character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Creator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Creator Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Creator","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_FileID.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate FileID Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileID","title":"Validate FileID Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileID","text":"function validates provided FileID unique character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_FileID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate FileID Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileID","text":"","code":"validate_SeaSondeRAPM_FileID(id)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_FileID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate FileID Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileID","text":"id unique character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_FileID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate FileID Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileID","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_FileName.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate FileName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileName","title":"Validate FileName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileName","text":"function validates provided FileName character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_FileName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate FileName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileName","text":"","code":"validate_SeaSondeRAPM_FileName(file_name)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_FileName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate FileName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileName","text":"file_name character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_FileName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate FileName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_FileName","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_PhaseCorrections.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate PhaseCorrections Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_PhaseCorrections","title":"Validate PhaseCorrections Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_PhaseCorrections","text":"function validates provided PhaseCorrections attribute numeric vector length 2.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_PhaseCorrections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate PhaseCorrections Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_PhaseCorrections","text":"","code":"validate_SeaSondeRAPM_PhaseCorrections(corrections)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_PhaseCorrections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate PhaseCorrections Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_PhaseCorrections","text":"corrections numeric vector validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_PhaseCorrections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate PhaseCorrections Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_PhaseCorrections","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_ProcessingSteps.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ProcessingSteps Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_ProcessingSteps","title":"Validate ProcessingSteps Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_ProcessingSteps","text":"function validates provided ProcessingSteps character vector.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_ProcessingSteps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ProcessingSteps Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_ProcessingSteps","text":"","code":"validate_SeaSondeRAPM_ProcessingSteps(steps)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_ProcessingSteps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ProcessingSteps Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_ProcessingSteps","text":"steps character vector validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_ProcessingSteps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate ProcessingSteps Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_ProcessingSteps","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_SiteName.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate SiteName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteName","title":"Validate SiteName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteName","text":"function validates provided SiteName character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_SiteName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate SiteName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteName","text":"","code":"validate_SeaSondeRAPM_SiteName(site_name)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_SiteName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate SiteName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteName","text":"site_name character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_SiteName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate SiteName Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteName","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_SiteOrigin.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate SiteOrigin Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteOrigin","title":"Validate SiteOrigin Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteOrigin","text":"function validates provided SiteOrigin numeric vector length 2.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_SiteOrigin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate SiteOrigin Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteOrigin","text":"","code":"validate_SeaSondeRAPM_SiteOrigin(site_origin)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_SiteOrigin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate SiteOrigin Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteOrigin","text":"site_origin numeric vector validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_SiteOrigin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate SiteOrigin Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_SiteOrigin","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Smoothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Smoothing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Smoothing","title":"Validate Smoothing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Smoothing","text":"function validates provided Smoothing numeric value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Smoothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Smoothing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Smoothing","text":"","code":"validate_SeaSondeRAPM_Smoothing(smoothing)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Smoothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Smoothing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Smoothing","text":"smoothing numeric value validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Smoothing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Smoothing Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Smoothing","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_StationCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate StationCode Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_StationCode","title":"Validate StationCode Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_StationCode","text":"function validates provided StationCode empty character string 4-character string length 1.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_StationCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate StationCode Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_StationCode","text":"","code":"validate_SeaSondeRAPM_StationCode(code)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_StationCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate StationCode Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_StationCode","text":"code character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_StationCode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate StationCode Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_StationCode","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Type.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Type Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Type","title":"Validate Type Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Type","text":"function validates provided Type character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Type Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Type","text":"","code":"validate_SeaSondeRAPM_Type(type)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Type Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Type","text":"type character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_Type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Type Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_Type","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_quality_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate quality_matrix Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_quality_matrix","title":"Validate quality_matrix Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_quality_matrix","text":"function validates provided quality_matrix 2-row complex matrix. also checks number columns matches calibration_matrix given SeaSondeRAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_quality_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate quality_matrix Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_quality_matrix","text":"","code":"validate_SeaSondeRAPM_quality_matrix(matrix, seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_quality_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate quality_matrix Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_quality_matrix","text":"matrix matrix validated. seasonde_apm_obj SeaSondeRAPM object compatibility check.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRAPM_quality_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate quality_matrix Attribute for a SeaSondeRAPM Object — validate_SeaSondeRAPM_quality_matrix","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRCS_ProcessingSteps.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ProcessingSteps Attribute for a SeaSondeRCS Object — validate_SeaSondeRCS_ProcessingSteps","title":"Validate ProcessingSteps Attribute for a SeaSondeRCS Object — validate_SeaSondeRCS_ProcessingSteps","text":"function validates provided ProcessingSteps character vector.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRCS_ProcessingSteps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ProcessingSteps Attribute for a SeaSondeRCS Object — validate_SeaSondeRCS_ProcessingSteps","text":"","code":"validate_SeaSondeRCS_ProcessingSteps(steps)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRCS_ProcessingSteps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ProcessingSteps Attribute for a SeaSondeRCS Object — validate_SeaSondeRCS_ProcessingSteps","text":"steps character vector validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeRCS_ProcessingSteps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate ProcessingSteps Attribute for a SeaSondeRCS Object — validate_SeaSondeRCS_ProcessingSteps","text":"Returns TRUE validation passes.","code":""}]
