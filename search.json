[{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"importance-of-an-hf-radar-antenna-pattern","dir":"Articles","previous_headings":"Introduction","what":"Importance of an HF-Radar Antenna Pattern","title":"APM","text":"high frequency radar (HF-Radar) systems, antenna pattern crucial component obtaining accurate current measurements reflected radar signal. radiation pattern, theoretically consists two opposite ellipses antenna loop, disturbed obstacles interference (Codar Ocean Sensors 2003) . presence buildings, trees nearby structure can distort antenna pattern, leading incorrect current measurement.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"need-for-antenna-pattern-measurement-apm","dir":"Articles","previous_headings":"Introduction","what":"Need for Antenna Pattern Measurement (APM)","title":"APM","text":"Antenna Pattern Measurement (APM) essential know actual antenna pattern, allowing system adjusted compensate distortions obstacles. vital improve accuracy radar measurements (Lipa et al. 2018).","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"apm-objective","dir":"Articles","previous_headings":"Antenna Pattern Measurement (APM)","what":"APM Objective","title":"APM","text":"main objective APM correct recalibrate actual antenna pattern. , APM contributes significant improvement quality data collected HF-Radar.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"direction-finding-with-music","dir":"Articles","previous_headings":"MUSIC algorithm and APM","what":"Direction Finding with MUSIC","title":"APM","text":"MUSIC (Multiple Signal Classification) (Schmidt 1986) algorithm estimate direction origin (DOA) signals received radar. systems SeaSonde, MUSIC algorithm applied complex voltages measured three antenna elements estimate parameters.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"application-of-the-music-algorithm-to-seasonde","dir":"Articles","previous_headings":"MUSIC algorithm and APM","what":"Application of the MUSIC algorithm to SeaSonde","title":"APM","text":"context HF-Radar systems SeaSonde, antenna pattern conceptualized “transfer vector” incident signals measured voltages antennas, following mathematical model proposed (Stoica Nehorai 1988): \\[ y(t) = (\\theta) x(t) + e(t), \\quad t = 1, 2, \\ldots, N \\]. transfer vector, antenna pattern, crucial MUSIC algorithm directly affects covariance matrix complex voltages. incorporating actual antenna pattern obtained using APM, DOA estimation results MUSIC significantly accurate reliable.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"limitations-and-challenges","dir":"Articles","previous_headings":"","what":"Limitations and Challenges","title":"APM","text":"implementing MUSIC algorithm, several assumptions limitations consider: \\(m > n\\): number antenna elements (\\(m\\)) must strictly greater number incident signals (\\(n\\)). SeaSonde context, limits number incident signals can considered Doppler frequency one two (Lipa et al. 2006). Single antenna responses: two different DOAs, responses three antennas must . Otherwise, one enters type one ambiguity, one discern direction signal arriving (Schmidt 1986). Uncorrelated noise: noise antennas assumed zero mean standard deviation. noises also correlated . fully coherent signals: incident signals completely coherent . reasonable assumption, especially dealing echoes reflected sea surface (Lipa et al. 2006). \\(N > m\\): number measured samples (\\(N\\)) antenna must greater \\(m\\) (Lipa et al. 2006).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"how-apm-is-applied","dir":"Articles","previous_headings":"Limitations and Challenges","what":"How APM is Applied","title":"APM","text":"APM procedure involves several software steps specialized tools: GPS Tracker: Processes GPS track create TRACK file used subsequent steps. SeaSondeAcquisition: Combines data acquired radar GPS TRACK, generating LOOP file. CrossLoopPatterner: Processes LOOP file generate antenna pattern. Installation new antenna pattern system. crucial use version Radial Suite APM data TimeSeries files ensure consistency processed data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"introduction-to-the-seasondeapm-class","dir":"Articles","previous_headings":"","what":"Introduction to the SeaSondeAPM Class","title":"APM","text":"SeaSondeAPM class SeaSondeR package designed handle antenna pattern calibration data, primarily SeaSonde radar systems. class aims provide comprehensive standardized framework store, manipulate, validate antenna pattern calibration data associated metadata. class relies several core functions perform various tasks object creation data validation. brief overview functions:","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_createseasondeapm","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class > Core Functions","what":"seasonder_createSeaSondeAPM","title":"APM","text":"function constructor creating SeaSondeAPM object. takes complex matrix (calibration_matrix) primary argument, stores calibration data various bearings. function performs validations, initializes additional attributes, returns SeaSondeAPM object. Usage:","code":"apm <- seasonder_createSeaSondeAPM(calibration_matrix)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_initializeattributesseasondeapm","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class > Core Functions","what":"seasonder_initializeAttributesSeaSondeAPM","title":"APM","text":"Called internally seasonder_createSeaSondeAPM, function initializes various attributes SeaSondeAPM object. Attributes include metadata properties like quality_matrix, BEAR, Creator, SiteName, etc. returns list initialized attributes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_validatecalibrationmatrixseasondeapm","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class > Core Functions","what":"seasonder_validateCalibrationMatrixSeaSondeAPM","title":"APM","text":"function ensures given calibration matrix meets required specifications. instance, checks matrix exactly two rows contains complex numbers.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_validateattributesseasondeapm","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class > Core Functions","what":"seasonder_validateAttributesSeaSondeAPM","title":"APM","text":"function validates various attributes SeaSondeAPM object. performs rigorous checks make sure attribute meets predefined conditions. ’s called internally validate attributes object creation modification.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"validate_seasondeapm_","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class > Core Functions","what":"validate_SeaSondeAPM_*","title":"APM","text":"suite functions validate individual attributes SeaSondeAPM object, like validate_SeaSondeAPM_quality_matrix, validate_SeaSondeAPM_BEAR, validate_SeaSondeAPM_SiteOrigin, etc.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"getters-and-setters","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class","what":"Getters and Setters","title":"APM","text":"SeaSondeAPM system, attribute accompanied corresponding getter setter function. functions follow specific naming pattern make easy identify attribute manipulate.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"naming-convention","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class > Getters and Setters","what":"Naming Convention","title":"APM","text":"naming convention getter setter functions : seasonder_set_SeaSondeAPM_<AttributeName>(seasonde_apm_obj, new_value): setting value attribute. seasonder_get_SeaSondeAPM_<AttributeName>(seasonde_apm_obj): retrieving value attribute. , <AttributeName> name attribute interested manipulating.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"setting-an-attribute","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class > Getters and Setters > Examples","what":"Setting an Attribute","title":"APM","text":"set value ‘Type’ attribute SeaSondeAPM object, use: , seasonde_apm_obj SeaSondeAPM object whose ‘Type’ attribute want set, new_value value want assign .","code":"seasonder_set_SeaSondeAPM_Type(seasonde_apm_obj, new_value)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"getting-an-attribute","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class > Getters and Setters > Examples","what":"Getting an Attribute","title":"APM","text":"get value ‘Type’ attribute SeaSondeAPM object, use: , seasonde_apm_obj SeaSondeAPM object whose ‘Type’ attribute want retrieve. following naming conventions examples, can easily set get attribute SeaSondeAPM object.","code":"value = seasonder_get_SeaSondeAPM_Type(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"seasonder_readseasondeapmfile","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class > Getters and Setters","what":"seasonder_readSeaSondeAPMFile","title":"APM","text":"function allows users read SeaSonde APM file given path parse SeaSondeAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"example-use-cases","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class","what":"Example Use Cases","title":"APM","text":"","code":"# Create a SeaSondeAPM object cal_matrix <- matrix(complex(real = c(1, 2), imaginary = c(3, 4)), nrow = 2) apm <- seasonder_createSeaSondeAPM(cal_matrix)  # Read from an APM file apm_from_file <- seasonder_readSeaSondeAPMFile(\"path/to/file.apm\")"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"key-features","dir":"Articles","previous_headings":"Introduction to the SeaSondeAPM Class","what":"Key Features","title":"APM","text":"Robust validation mechanisms Customizable attributes metadata Easy integration SeaSonde data pipelines utilizing class associated functions, users can maintain high level integrity standardization managing SeaSonde antenna pattern calibration data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"detailed-attributes-for-seasondeapm-objects","dir":"Articles","previous_headings":"","what":"Detailed Attributes for SeaSondeAPM Objects","title":"APM","text":"SeaSondeAPM object various attributes capture specifics Antenna Pattern Measurement (APM) data. attributes can initialized using seasonder_initializeAttributesSeaSondeAPM() function.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"initialization-function","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeAPM Objects","what":"Initialization Function","title":"APM","text":"seasonder_initializeAttributesSeaSondeAPM function initializes various attributes SeaSondeAPM object, taking calibration matrix mandatory argument number additional named attributes override default settings.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"syntax","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeAPM Objects > Initialization Function","what":"Syntax","title":"APM","text":"Arguments: calibration_matrix: 2 x b complex matrix, b represents number bearings calibration. ...: Additional named attributes may override default values.","code":"seasonder_initializeAttributesSeaSondeAPM(calibration_matrix, ...)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"returns","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeAPM Objects > Initialization Function","what":"Returns","title":"APM","text":"function returns list containing initialized attributes SeaSondeAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"attributes","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeAPM Objects","what":"Attributes","title":"APM","text":"quality_matrix: 2 x b complex matrix quality data, b represents number bearings. BEAR: numeric vector bearings (degrees). Type: Character string representing antenna pattern type. FileName: name MeasPattern.txt file APM data read. CreateTimeStamp: creation time APM file. Creator: name entity created SeaSondeAPM object. Defaults empty character vector. SiteName: name site (different SiteCode). Defaults empty character vector. SiteOrigin: numeric vector representing GPS location station. Defaults c(0,0). ProcessingSteps: character vector keeps track processing steps applied object. Defaults empty character vector. AmplitudeFactors: numeric vector amplitude factors. Defaults c(0,0). AntennaBearing: numeric vector antenna bearing. Defaults empty numeric vector. StationCode: 4-character code station. Defaults empty character vector. BearingResolution: numeric value indicating bearing resolution degrees. Defaults empty numeric vector. Smoothing: numeric vector indicating smoothing applied antenna pattern. Defaults empty numeric vector. CommentLine: Metadata lines data file matching attribute. Defaults empty character vector. FileID: File’s UUID. Defaults empty character vector. PhaseCorrections: numeric vector phase corrections. Defaults c(0,0).","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"initialize-attributes-with-default-settings","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeAPM Objects > Examples","what":"Initialize Attributes with Default Settings","title":"APM","text":"","code":"# Create a calibration_matrix cal_matrix <- matrix(complex(real = c(1, 2), imaginary = c(3, 4)), nrow = 2, ncol = 2)  # Initialize attributes attr_list <- seasonder_initializeAttributesSeaSondeAPM(calibration_matrix = cal_matrix) str(attr_list)"},{"path":"https://gofuvi.github.io/SeaSondeR/articles/SeaSondeAPM.html","id":"initialize-attributes-with-custom-type","dir":"Articles","previous_headings":"Detailed Attributes for SeaSondeAPM Objects > Examples","what":"Initialize Attributes with Custom ‘Type’","title":"APM","text":"understanding attributes corresponding getter setter methods, can effectively interact SeaSondeAPM objects.","code":"# Initialize attributes with a custom 'Type' attr_list_custom <- seasonder_initializeAttributesSeaSondeAPM(calibration_matrix = cal_matrix, Type = \"Custom Pattern\") str(attr_list_custom)"},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"instrument-introduction-seasonde","dir":"Articles","previous_headings":"","what":"Instrument Introduction: SeaSonde","title":"SeaSondeR","text":"SeaSonde compact, simplified radar system developed California’s Silicon Valley measure near-surface ocean currents , certain cases, ocean waves. operates low frequencies ranging 4 50 megahertz, uses small bandwidth. SeaSonde system consists two radial sites contribute combined site produce current maps. radial site can imagined hub wheel, “radials” acting spokes pointing toward away site. radials represent component velocities ocean current specific directions. Radial sites typically several kilometers apart fully automated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"common-data-processing-tasks-","dir":"Articles","previous_headings":"","what":"Common Data Processing Tasks.","title":"SeaSondeR","text":"Radial Map Generation: Creation maps showing direction velocity currents relative radial site. Vector Map Creation: Combining radial maps multiple sites create complete ocean current map. Antenna Pattern Measurement (APM): Antenna pattern calibration improve data accuracy. Outliers Removal Noise Filtering: Preprocessing improve data quality. Antenna Gain Calculation: Adjustment measurements obtain accurate data.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"radial-suite","dir":"Articles","previous_headings":"Existing SeaSonde Data Processing Software","what":"Radial Suite","title":"SeaSondeR","text":"proprietary software specifically SeaSonde provides tools data processing. Advantages: - Designed specifically SeaSonde. - Integrated comprehensive. Disadvantages: - Closed software. - Costly limited licenses.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"radiowave-operators-working-group-repositories","dir":"Articles","previous_headings":"Existing SeaSonde Data Processing Software","what":"Radiowave Operators Working Group Repositories","title":"SeaSondeR","text":"Includes spectra_tools repository, Python scripts reading preprocessing data. Advantages: - Open source. - Good data quality control. Disadvantages: - Limited tasks.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"hfr_cs_processing-by-bryan-emery","dir":"Articles","previous_headings":"Existing SeaSonde Data Processing Software","what":"hfr_cs_processing by Bryan Emery","title":"SeaSondeR","text":"Provides wide range functionality data processing MATLAB. Advantages: - Complete task coverage. - Good research. Disadvantages: - Requires MATLAB license. - Limited author’s research.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/articles/intro.html","id":"tasks-that-can-be-performed-with-this-r-package","dir":"Articles","previous_headings":"","what":"Tasks that Can be Performed with This R Package","title":"SeaSondeR","text":"R package, called SeaSondeR, aims provide complete, open source solution SeaSonde data processing. Capabilities include: Data Reading: Read APM .cs files. Map Generation: Create radial vector maps. APM: Antenna pattern calibration. Data Preprocessing: Noise filtering, outliers elimination gain calculation. Interoperability: Can interface packages repositories deeper analysis. Diagnostics Maintenance: Tools radio site problem diagnosis resolution. using SeaSondeR, users can take advantage power flexibility R language data analysis, maintaining high accuracy reliability interpretation SeaSonde data.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Juan Luis Herrera Cortijo. Author, maintainer.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herrera Cortijo J (2023). SeaSondeR: Tools Processing SeaSonde HF-Radar Data. https://github.com/GOFUVI/SeaSondeR, https://gofuvi.github.io/SeaSondeR/.","code":"@Manual{,   title = {SeaSondeR: Tools for Processing SeaSonde HF-Radar Data},   author = {Juan Luis {Herrera Cortijo}},   year = {2023},   note = {https://github.com/GOFUVI/SeaSondeR, https://gofuvi.github.io/SeaSondeR/}, }"},{"path":"https://gofuvi.github.io/SeaSondeR/index.html","id":"seasonder","dir":"","previous_headings":"","what":"Tools for Processing SeaSonde HF-Radar Data","title":"Tools for Processing SeaSonde HF-Radar Data","text":"goal SeaSondeR provide comprehensive set tools processing analyzing data SeaSonde High-Frequency Radar (HF-Radar) instrument. package intended facilitate handling raw processed data, including spectral matrices, calibration, metadata management.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Processing SeaSonde HF-Radar Data","text":"can install development version SeaSondeR GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"GOFUVI/SeaSondeR\")"},{"path":"https://gofuvi.github.io/SeaSondeR/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Processing SeaSonde HF-Radar Data","text":"basic example shows solve common problem:","code":"library(SeaSondeR) ## basic example code"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/compound.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigment pipe — %<>%","title":"Assigment pipe — %<>%","text":"See magrittr::%<>% details.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/compound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigment pipe — %<>%","text":"","code":"lhs %<>% rhs"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/compound.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigment pipe — %<>%","text":"lhs object serves initial value target. rhs function call using magrittr semantics.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/compound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assigment pipe — %<>%","text":"result calling rhs(lhs).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/parse_metadata_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","title":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","text":"function takes single line SeaSonde APM file parses named attribute corresponding value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/parse_metadata_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","text":"","code":"parse_metadata_line(line)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/parse_metadata_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","text":"line line text parse.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/parse_metadata_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a Metadata Line from a SeaSonde APM File — parse_metadata_line","text":"Returns list containing attribute name value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_matrix_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","title":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","text":"function reads row numbers matrix, represented array text lines. used facilitate reading data SeaSonde APM files.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_matrix_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","text":"","code":"read_matrix_row(lines, start, number_of_lines_to_read)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_matrix_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","text":"lines array lines, representing part row. start start index lines read . number_of_lines_to_read number lines read form row.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/read_matrix_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Row from a Matrix Represented as Text Lines — read_matrix_row","text":"Returns numeric vector containing row values.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_archive_expression_log.html","id":null,"dir":"Reference","previous_headings":"","what":"seasonder_archive_expression_log function — seasonder_archive_expression_log","title":"seasonder_archive_expression_log function — seasonder_archive_expression_log","text":"function wraps provided expression expr tryCatch block archives log information whenever 'seasonder_log' condition signaled within evaluated expression. log message archived calling seasonder_log_archiver signaled condition cond additional parameters.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_archive_expression_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"seasonder_archive_expression_log function — seasonder_archive_expression_log","text":"","code":"seasonder_archive_expression_log(expr, ...)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_archive_expression_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"seasonder_archive_expression_log function — seasonder_archive_expression_log","text":"expr expression evaluated. expression signal 'seasonder_log' condition using seasonder_log function needed. ... Additional parameters passed seasonder_log_archiver function.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_archive_expression_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"seasonder_archive_expression_log function — seasonder_archive_expression_log","text":"result evaluating input expression expr.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areLogsEnabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","title":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","text":"function checks whether log recording currently enabled SeaSondeR package.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areLogsEnabled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","text":"","code":"seasonder_areLogsEnabled()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areLogsEnabled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","text":"Logical indicating whether logs enabled disabled.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areLogsEnabled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if log recording is enabled in SeaSondeR — seasonder_areLogsEnabled","text":"","code":"seasonder_areLogsEnabled() #> [1] TRUE"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areMessagesEnabled.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","title":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","text":"function checks whether message logging currently enabled SeaSondeR package.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areMessagesEnabled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","text":"","code":"seasonder_areMessagesEnabled()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areMessagesEnabled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","text":"Logical indicating whether messages enabled disabled.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_areMessagesEnabled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if message logging is enabled in SeaSondeR — seasonder_areMessagesEnabled","text":"","code":"seasonder_areMessagesEnabled() #> [1] TRUE"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeAPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SeaSondeAPM Object — seasonder_createSeaSondeAPM","title":"Create a SeaSondeAPM Object — seasonder_createSeaSondeAPM","text":"function creates SeaSondeAPM object store antenna pattern calibration data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeAPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SeaSondeAPM Object — seasonder_createSeaSondeAPM","text":"","code":"seasonder_createSeaSondeAPM(   calibration_matrix = matrix(complex(real = NA_real_, imaginary = NA_real_), nrow = 2,     ncol = 0),   ... )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeAPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SeaSondeAPM Object — seasonder_createSeaSondeAPM","text":"calibration_matrix 2 x b complex matrix, b number bearings calibration. ... Additional named attributes passed seasonder_initializeAttributesSeaSondeAPM.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeAPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SeaSondeAPM Object — seasonder_createSeaSondeAPM","text":"SeaSondeAPM object containing complex matrix class attribute 'SeaSondeAPM' additional attributes metadata. Row names set \"A13\" \"A23\" column names set values BEAR.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeAPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a SeaSondeAPM Object — seasonder_createSeaSondeAPM","text":"function performs following operations: Validates calibration_matrix codeseasonder_validateCalibrationMatrixSeaSondeAPM. Initializes attributes either default user-provided values. Merges initialized attributes calibration_matrix. Sets object's class 'SeaSondeAPM'. details attributes, see seasonder_initializeAttributesSeaSondeAPM.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_createSeaSondeAPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a SeaSondeAPM Object — seasonder_createSeaSondeAPM","text":"","code":"cal_matrix <- matrix(complex(real = c(1, 2), imaginary = c(3, 4)), nrow = 2) apm <- seasonder_createSeaSondeAPM(cal_matrix) #> seasonder_createSeaSondeAPM:  APM object created successfully.  apm <- seasonder_createSeaSondeAPM(cal_matrix,Creator=\"Me\") #> seasonder_createSeaSondeAPM:  APM object created successfully. print(attr(apm,\"Creator\")) #> [1] \"Me\" # [1] \"Me\""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableLogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Disable log recording in SeaSondeR — seasonder_disableLogs","title":"Disable log recording in SeaSondeR — seasonder_disableLogs","text":"function disables log recording SeaSondeR package. disabled, various SeaSondeR functions longer output logs.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableLogs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disable log recording in SeaSondeR — seasonder_disableLogs","text":"","code":"seasonder_disableLogs()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableLogs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disable log recording in SeaSondeR — seasonder_disableLogs","text":"","code":"seasonder_disableLogs()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableMessages.html","id":null,"dir":"Reference","previous_headings":"","what":"Disable message logging in SeaSondeR — seasonder_disableMessages","title":"Disable message logging in SeaSondeR — seasonder_disableMessages","text":"function disables message logging SeaSondeR package. disabled, various SeaSondeR functions longer output informational messages.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableMessages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disable message logging in SeaSondeR — seasonder_disableMessages","text":"","code":"seasonder_disableMessages()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_disableMessages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disable message logging in SeaSondeR — seasonder_disableMessages","text":"","code":"seasonder_disableMessages()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableLogs.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable log recording in SeaSondeR — seasonder_enableLogs","title":"Enable log recording in SeaSondeR — seasonder_enableLogs","text":"function enables log recording SeaSondeR package. enabled, various SeaSondeR functions output logs.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableLogs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable log recording in SeaSondeR — seasonder_enableLogs","text":"","code":"seasonder_enableLogs()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableLogs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enable log recording in SeaSondeR — seasonder_enableLogs","text":"","code":"seasonder_enableLogs()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableMessages.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable message logging in SeaSondeR — seasonder_enableMessages","title":"Enable message logging in SeaSondeR — seasonder_enableMessages","text":"function enables message logging SeaSondeR package. enabled, various SeaSondeR functions output informational messages.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableMessages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable message logging in SeaSondeR — seasonder_enableMessages","text":"","code":"seasonder_enableMessages()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_enableMessages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enable message logging in SeaSondeR — seasonder_enableMessages","text":"","code":"seasonder_enableMessages()"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeAPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize Attributes for a SeaSondeAPM Object — seasonder_initializeAttributesSeaSondeAPM","title":"Initialize Attributes for a SeaSondeAPM Object — seasonder_initializeAttributesSeaSondeAPM","text":"function initializes attributes SeaSondeAPM object, including metadata properties.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeAPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize Attributes for a SeaSondeAPM Object — seasonder_initializeAttributesSeaSondeAPM","text":"","code":"seasonder_initializeAttributesSeaSondeAPM(calibration_matrix, ...)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeAPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize Attributes for a SeaSondeAPM Object — seasonder_initializeAttributesSeaSondeAPM","text":"calibration_matrix 2 x b complex matrix, b number bearings calibration. ... Additional named attributes may override defaults.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeAPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize Attributes for a SeaSondeAPM Object — seasonder_initializeAttributesSeaSondeAPM","text":"list containing initialized attributes SeaSondeAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeAPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize Attributes for a SeaSondeAPM Object — seasonder_initializeAttributesSeaSondeAPM","text":"function initializes following attributes: quality_matrix: 2 x b complex matrix quality data, b number bearings. BEAR: numeric vector bearings (degrees). Type: Character string antenna pattern type. Creator: Object creator name. Default empty character vector. SiteName: Site name (SiteCode). Default empty character vector. SiteOrigin: Numeric vector two elements representing Station GPS location. Default c(0,0). FileName: Default empty character vector. CreateTimeStamp: APM file creation time. Default current system date time. ProcessingSteps: Processing steps applied object. Default empty character vector. AmplitudeFactors: Numeric vector two elements amplitude factors. Default c(0,0). AntennaBearing: Default empty numeric vector. StationCode: 4-character station code. Default empty character vector. BearingResolution: degrees. Default empty numeric vector. Smoothing: Numeric vector indicating smoothing applied antenna pattern. Default empty numeric vector. CommentLine: Metadata lines data file matching attribute. Default empty character vector. FileID: File's UUID. Default empty character vector. PhaseCorrections: Numeric vector two elements phase corrections. Default c(0,0). attribute corresponding setter getter function, following naming pattern seasonder_set/get_SeaSondeAPM_*, * name attribute. example, set 'Type' attribute, use seasonder_set_SeaSondeAPM_Type(seasonde_apm_obj,new_value). get , use seasonder_get_SeaSondeAPM_Type(seasonde_apm_obj,new_value). Please see seasonder_validateAttributesSeaSondeAPM details attributes validation.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_initializeAttributesSeaSondeAPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize Attributes for a SeaSondeAPM Object — seasonder_initializeAttributesSeaSondeAPM","text":"","code":"# Create a calibration_matrix cal_matrix <- matrix(complex(real = c(1, 2), imaginary = c(3, 4)), nrow = 2, ncol = 2)  # Initialize attributes with default settings attr_list <- seasonder_initializeAttributesSeaSondeAPM(calibration_matrix = cal_matrix) str(attr_list) #> List of 17 #>  $ quality_matrix   : cplx [1:2, 1:2] NA NA NA ... #>  $ BEAR             : num [1:2] 0 0 #>  $ Type             : chr(0)  #>  $ Creator          : chr(0)  #>  $ SiteName         : chr(0)  #>  $ SiteOrigin       : num [1:2] 0 0 #>  $ FileName         : chr(0)  #>  $ CreateTimeStamp  : POSIXct[1:1], format: \"2023-09-23 06:03:34\" #>  $ ProcessingSteps  : chr(0)  #>  $ AmplitudeFactors : num [1:2] 0 0 #>  $ AntennaBearing   : num(0)  #>  $ StationCode      : chr(0)  #>  $ BearingResolution: num(0)  #>  $ Smoothing        : num(0)  #>  $ CommentLine      : chr(0)  #>  $ FileID           : chr(0)  #>  $ PhaseCorrections : num [1:2] 0 0  # Initialize attributes with custom 'Type' attr_list_custom <- seasonder_initializeAttributesSeaSondeAPM(calibration_matrix = cal_matrix, Type = \"Custom Pattern\") str(attr_list_custom) #> List of 17 #>  $ quality_matrix   : cplx [1:2, 1:2] NA NA NA ... #>  $ BEAR             : num [1:2] 0 0 #>  $ Type             : chr \"Custom Pattern\" #>  $ Creator          : chr(0)  #>  $ SiteName         : chr(0)  #>  $ SiteOrigin       : num [1:2] 0 0 #>  $ FileName         : chr(0)  #>  $ CreateTimeStamp  : POSIXct[1:1], format: \"2023-09-23 06:03:34\" #>  $ ProcessingSteps  : chr(0)  #>  $ AmplitudeFactors : num [1:2] 0 0 #>  $ AntennaBearing   : num(0)  #>  $ StationCode      : chr(0)  #>  $ BearingResolution: num(0)  #>  $ Smoothing        : num(0)  #>  $ CommentLine      : chr(0)  #>  $ FileID           : chr(0)  #>  $ PhaseCorrections : num [1:2] 0 0"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log.html","id":null,"dir":"Reference","previous_headings":"","what":"seasonder_log function — seasonder_log","title":"seasonder_log function — seasonder_log","text":"function creates logging message signals seasonder_log condition.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"seasonder_log function — seasonder_log","text":"","code":"seasonder_log(message, level = c(\"info\", \"error\", \"fatal\"))"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"seasonder_log function — seasonder_log","text":"message character string indicating message logged. level character string defines level log. can \"info\", \"error\", \"fatal\". Default \"info\".","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"seasonder_log function — seasonder_log","text":"","code":"seasonder_log(\"This is an info message\") seasonder_log(\"This is an error message\", \"error\") seasonder_log(\"This is a fatal message\", \"fatal\")"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log_archiver.html","id":null,"dir":"Reference","previous_headings":"","what":"seasonder_log_archiver function — seasonder_log_archiver","title":"seasonder_log_archiver function — seasonder_log_archiver","text":"function writes logged message specific path based level log.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log_archiver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"seasonder_log_archiver function — seasonder_log_archiver","text":"","code":"seasonder_log_archiver(   object,   log_path = tempfile(),   log_info_path = log_path,   log_error_path = log_info_path,   log_fatal_path = log_error_path )"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log_archiver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"seasonder_log_archiver function — seasonder_log_archiver","text":"object list object contains 'level' 'message' elements indicating level message log respectively. log_path character string indicating default path logs stored. Default temporary file. log_info_path character string indicating path 'info' level logs stored. Default 'log_path'. log_error_path character string indicating path 'error' level logs stored. Default 'log_info_path'. log_fatal_path character string indicating path 'fatal' level logs stored. Default 'log_error_path'.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log_archiver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"seasonder_log_archiver function — seasonder_log_archiver","text":"log object","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_log_archiver.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"seasonder_log_archiver function — seasonder_log_archiver","text":"","code":"log <- list(level = \"info\", message = \"This is an info message\") seasonder_log_archiver(log) #> $level #> [1] \"info\" #>  #> $message #> [1] \"This is an info message\" #>  log <- list(level = \"error\", message = \"This is an error message\") seasonder_log_archiver(log) #> $level #> [1] \"error\" #>  #> $message #> [1] \"This is an error message\" #>  log <- list(level = \"fatal\", message = \"This is a fatal message\") seasonder_log_archiver(log) #> $level #> [1] \"fatal\" #>  #> $message #> [1] \"This is a fatal message\" #>"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeAPMFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeAPMFile","title":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeAPMFile","text":"function reads SeaSonde APM file returns SeaSondeAPM object containing parsed data.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeAPMFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeAPMFile","text":"","code":"seasonder_readSeaSondeAPMFile(file_path, ...)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeAPMFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeAPMFile","text":"file_path path SeaSonde APM file read. ... Additional arguments passed object creation function (See seasonder_createSeaSondeAPM details).","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_readSeaSondeAPMFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and Parse a SeaSonde APM File — seasonder_readSeaSondeAPMFile","text":"Returns SeaSondeAPM object containing parsed data.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeAPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Attributes for a SeaSondeAPM Object — seasonder_validateAttributesSeaSondeAPM","title":"Validate Attributes for a SeaSondeAPM Object — seasonder_validateAttributesSeaSondeAPM","text":"function validates attributes given SeaSondeAPM object ensure meet required specifications.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeAPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Attributes for a SeaSondeAPM Object — seasonder_validateAttributesSeaSondeAPM","text":"","code":"seasonder_validateAttributesSeaSondeAPM(seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeAPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Attributes for a SeaSondeAPM Object — seasonder_validateAttributesSeaSondeAPM","text":"seasonde_apm_obj SeaSondeAPM object whose attributes validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeAPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Attributes for a SeaSondeAPM Object — seasonder_validateAttributesSeaSondeAPM","text":"TRUE attributes valid. function stop execution display error message attributes invalid.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeAPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Attributes for a SeaSondeAPM Object — seasonder_validateAttributesSeaSondeAPM","text":"function performs validation following attributes SeaSondeAPM object: quality_matrix BEAR Type Creator SiteName SiteOrigin FileName CreateTimeStamp ProcessingSteps AmplitudeFactors AntennaBearing StationCode BearingResolution Smoothing CommentLine FileID PhaseCorrections internally calls specific validation functions attributes. attributes found invalid, function stop execution display error message. details attributes, see seasonder_initializeAttributesSeaSondeAPM.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateAttributesSeaSondeAPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Attributes for a SeaSondeAPM Object — seasonder_validateAttributesSeaSondeAPM","text":"","code":"# Create a mock SeaSondeAPM object with valid attributes mock_matrix <- matrix(complex(real = c(1, 2), imaginary = c(3, 4)), nrow = 2) mock_apm <- seasonder_createSeaSondeAPM(mock_matrix) #> seasonder_createSeaSondeAPM:  APM object created successfully.  # Validate attributes valid <- seasonder_validateAttributesSeaSondeAPM(mock_apm) print(valid)  # Should print TRUE if all attributes are valid #> [1] TRUE"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeAPM.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Calibration Matrix for a SeaSondeAPM Object — seasonder_validateCalibrationMatrixSeaSondeAPM","title":"Validate Calibration Matrix for a SeaSondeAPM Object — seasonder_validateCalibrationMatrixSeaSondeAPM","text":"function validates input calibration_matrix ensure meets required specifications use SeaSondeAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeAPM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Calibration Matrix for a SeaSondeAPM Object — seasonder_validateCalibrationMatrixSeaSondeAPM","text":"","code":"seasonder_validateCalibrationMatrixSeaSondeAPM(matrix)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeAPM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Calibration Matrix for a SeaSondeAPM Object — seasonder_validateCalibrationMatrixSeaSondeAPM","text":"matrix 2 x b complex matrix calibration, b number bearings.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeAPM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Calibration Matrix for a SeaSondeAPM Object — seasonder_validateCalibrationMatrixSeaSondeAPM","text":"TRUE matrix valid. function stop execution display error message matrix invalid.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeAPM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate Calibration Matrix for a SeaSondeAPM Object — seasonder_validateCalibrationMatrixSeaSondeAPM","text":"function performs following validation checks: Confirms input matrix. Verifies matrix exactly two rows. Checks matrix contains complex numbers. validation steps fail, function log fatal error stop execution using rlang::abort.","code":""},{"path":[]},{"path":"https://gofuvi.github.io/SeaSondeR/reference/seasonder_validateCalibrationMatrixSeaSondeAPM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Calibration Matrix for a SeaSondeAPM Object — seasonder_validateCalibrationMatrixSeaSondeAPM","text":"","code":"# Invalid matrix: not a matrix invalid_matrix1 <- c(1, 2) # This will cause an error # seasonder_validateCalibrationMatrixSeaSondeAPM(invalid_matrix1)  # Invalid matrix: not two rows invalid_matrix2 <- matrix(complex(real = c(1, 2, 3), imaginary = c(4, 5, 6)), nrow = 3) # This will cause an error # seasonder_validateCalibrationMatrixSeaSondeAPM(invalid_matrix2)  # Valid matrix valid_matrix <- matrix(complex(real = c(1, 2), imaginary = c(3, 4)), nrow = 2) seasonder_validateCalibrationMatrixSeaSondeAPM(valid_matrix)  # No error #> [1] TRUE"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_AmplitudeFactors.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate AmplitudeFactors Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AmplitudeFactors","title":"Validate AmplitudeFactors Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AmplitudeFactors","text":"function validates provided AmplitudeFactors numeric vector length 2.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_AmplitudeFactors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate AmplitudeFactors Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AmplitudeFactors","text":"","code":"validate_SeaSondeAPM_AmplitudeFactors(factors)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_AmplitudeFactors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate AmplitudeFactors Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AmplitudeFactors","text":"factors numeric vector validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_AmplitudeFactors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate AmplitudeFactors Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AmplitudeFactors","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_AntennaBearing.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate AntennaBearing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AntennaBearing","title":"Validate AntennaBearing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AntennaBearing","text":"function validates provided AntennaBearing numeric value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_AntennaBearing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate AntennaBearing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AntennaBearing","text":"","code":"validate_SeaSondeAPM_AntennaBearing(bearing)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_AntennaBearing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate AntennaBearing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AntennaBearing","text":"bearing numeric value validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_AntennaBearing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate AntennaBearing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_AntennaBearing","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_BEAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BEAR Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BEAR","title":"Validate BEAR Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BEAR","text":"function validates provided BEAR numeric vector length matches number columns calibration_matrix given SeaSondeAPM object. also validates bearings -180 180 degrees.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_BEAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BEAR Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BEAR","text":"","code":"validate_SeaSondeAPM_BEAR(vector, seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_BEAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BEAR Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BEAR","text":"vector numeric vector validated. seasonde_apm_obj SeaSondeAPM object compatibility check.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_BEAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BEAR Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BEAR","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_BearingResolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate BearingResolution Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BearingResolution","title":"Validate BearingResolution Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BearingResolution","text":"function validates provided BearingResolution numeric value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_BearingResolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate BearingResolution Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BearingResolution","text":"","code":"validate_SeaSondeAPM_BearingResolution(resolution)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_BearingResolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate BearingResolution Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BearingResolution","text":"resolution numeric value validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_BearingResolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate BearingResolution Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_BearingResolution","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_CommentLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate CommentLine Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CommentLine","title":"Validate CommentLine Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CommentLine","text":"function validates provided CommentLine character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_CommentLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate CommentLine Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CommentLine","text":"","code":"validate_SeaSondeAPM_CommentLine(comment)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_CommentLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate CommentLine Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CommentLine","text":"comment character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_CommentLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate CommentLine Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CommentLine","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_CreateTimeStamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate CreateTimeStamp Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CreateTimeStamp","title":"Validate CreateTimeStamp Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CreateTimeStamp","text":"function validates provided CreateTimeStamp POSIXct Date object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_CreateTimeStamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate CreateTimeStamp Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CreateTimeStamp","text":"","code":"validate_SeaSondeAPM_CreateTimeStamp(timestamp)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_CreateTimeStamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate CreateTimeStamp Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CreateTimeStamp","text":"timestamp Date object validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_CreateTimeStamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate CreateTimeStamp Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_CreateTimeStamp","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Creator.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Creator Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Creator","title":"Validate Creator Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Creator","text":"function validates provided Creator character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Creator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Creator Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Creator","text":"","code":"validate_SeaSondeAPM_Creator(creator)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Creator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Creator Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Creator","text":"creator character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Creator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Creator Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Creator","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_FileID.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate FileID Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileID","title":"Validate FileID Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileID","text":"function validates provided FileID unique character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_FileID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate FileID Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileID","text":"","code":"validate_SeaSondeAPM_FileID(id)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_FileID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate FileID Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileID","text":"id unique character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_FileID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate FileID Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileID","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_FileName.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate FileName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileName","title":"Validate FileName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileName","text":"function validates provided FileName character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_FileName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate FileName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileName","text":"","code":"validate_SeaSondeAPM_FileName(file_name)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_FileName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate FileName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileName","text":"file_name character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_FileName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate FileName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_FileName","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_PhaseCorrections.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate PhaseCorrections Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_PhaseCorrections","title":"Validate PhaseCorrections Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_PhaseCorrections","text":"function validates provided PhaseCorrections attribute numeric vector length 2.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_PhaseCorrections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate PhaseCorrections Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_PhaseCorrections","text":"","code":"validate_SeaSondeAPM_PhaseCorrections(corrections)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_PhaseCorrections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate PhaseCorrections Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_PhaseCorrections","text":"corrections numeric vector validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_PhaseCorrections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate PhaseCorrections Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_PhaseCorrections","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_ProcessingSteps.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate ProcessingSteps Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_ProcessingSteps","title":"Validate ProcessingSteps Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_ProcessingSteps","text":"function validates provided ProcessingSteps character vector.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_ProcessingSteps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate ProcessingSteps Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_ProcessingSteps","text":"","code":"validate_SeaSondeAPM_ProcessingSteps(steps)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_ProcessingSteps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate ProcessingSteps Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_ProcessingSteps","text":"steps character vector validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_ProcessingSteps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate ProcessingSteps Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_ProcessingSteps","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_SiteName.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate SiteName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteName","title":"Validate SiteName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteName","text":"function validates provided SiteName character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_SiteName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate SiteName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteName","text":"","code":"validate_SeaSondeAPM_SiteName(site_name)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_SiteName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate SiteName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteName","text":"site_name character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_SiteName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate SiteName Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteName","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_SiteOrigin.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate SiteOrigin Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteOrigin","title":"Validate SiteOrigin Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteOrigin","text":"function validates provided SiteOrigin numeric vector length 2.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_SiteOrigin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate SiteOrigin Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteOrigin","text":"","code":"validate_SeaSondeAPM_SiteOrigin(site_origin)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_SiteOrigin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate SiteOrigin Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteOrigin","text":"site_origin numeric vector validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_SiteOrigin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate SiteOrigin Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_SiteOrigin","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Smoothing.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Smoothing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Smoothing","title":"Validate Smoothing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Smoothing","text":"function validates provided Smoothing numeric value.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Smoothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Smoothing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Smoothing","text":"","code":"validate_SeaSondeAPM_Smoothing(smoothing)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Smoothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Smoothing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Smoothing","text":"smoothing numeric value validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Smoothing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Smoothing Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Smoothing","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_StationCode.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate StationCode Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_StationCode","title":"Validate StationCode Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_StationCode","text":"function validates provided StationCode empty character string 4-character string length 1.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_StationCode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate StationCode Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_StationCode","text":"","code":"validate_SeaSondeAPM_StationCode(code)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_StationCode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate StationCode Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_StationCode","text":"code character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_StationCode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate StationCode Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_StationCode","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Type.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Type Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Type","title":"Validate Type Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Type","text":"function validates provided Type character string.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Type Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Type","text":"","code":"validate_SeaSondeAPM_Type(type)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Type Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Type","text":"type character string validated.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_Type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Type Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_Type","text":"Returns TRUE validation passes.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_quality_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate quality_matrix Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_quality_matrix","title":"Validate quality_matrix Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_quality_matrix","text":"function validates provided quality_matrix 2-row complex matrix. also checks number columns matches calibration_matrix given SeaSondeAPM object.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_quality_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate quality_matrix Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_quality_matrix","text":"","code":"validate_SeaSondeAPM_quality_matrix(matrix, seasonde_apm_obj)"},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_quality_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate quality_matrix Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_quality_matrix","text":"matrix matrix validated. seasonde_apm_obj SeaSondeAPM object compatibility check.","code":""},{"path":"https://gofuvi.github.io/SeaSondeR/reference/validate_SeaSondeAPM_quality_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate quality_matrix Attribute for a SeaSondeAPM Object — validate_SeaSondeAPM_quality_matrix","text":"Returns TRUE validation passes.","code":""}]
